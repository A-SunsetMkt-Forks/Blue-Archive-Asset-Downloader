# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ScenarioScriptTestExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ScenarioScriptTestExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsScenarioScriptTestExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ScenarioScriptTestExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ScenarioScriptTestExcel
    def GroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ScenarioScriptTestExcel
    def SelectionGroup(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ScenarioScriptTestExcel
    def BGMId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ScenarioScriptTestExcel
    def Sound(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioScriptTestExcel
    def Transition(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ScenarioScriptTestExcel
    def BGName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ScenarioScriptTestExcel
    def BGEffect(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ScenarioScriptTestExcel
    def PopupFileName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioScriptTestExcel
    def ScriptKr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioScriptTestExcel
    def TextJp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioScriptTestExcel
    def TextTh(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioScriptTestExcel
    def TextTw(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioScriptTestExcel
    def TextEn(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioScriptTestExcel
    def TextDe(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioScriptTestExcel
    def TextFr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioScriptTestExcel
    def VoiceJp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def Start(builder): builder.StartObject(16)
def ScenarioScriptTestExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddGroupId(builder, GroupId): builder.PrependInt64Slot(0, GroupId, 0)
def ScenarioScriptTestExcelAddGroupId(builder, GroupId):
    """This method is deprecated. Please switch to AddGroupId."""
    return AddGroupId(builder, GroupId)
def AddSelectionGroup(builder, SelectionGroup): builder.PrependInt64Slot(1, SelectionGroup, 0)
def ScenarioScriptTestExcelAddSelectionGroup(builder, SelectionGroup):
    """This method is deprecated. Please switch to AddSelectionGroup."""
    return AddSelectionGroup(builder, SelectionGroup)
def AddBGMId(builder, BGMId): builder.PrependInt64Slot(2, BGMId, 0)
def ScenarioScriptTestExcelAddBGMId(builder, BGMId):
    """This method is deprecated. Please switch to AddBGMId."""
    return AddBGMId(builder, BGMId)
def AddSound(builder, Sound): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(Sound), 0)
def ScenarioScriptTestExcelAddSound(builder, Sound):
    """This method is deprecated. Please switch to AddSound."""
    return AddSound(builder, Sound)
def AddTransition(builder, Transition): builder.PrependUint32Slot(4, Transition, 0)
def ScenarioScriptTestExcelAddTransition(builder, Transition):
    """This method is deprecated. Please switch to AddTransition."""
    return AddTransition(builder, Transition)
def AddBGName(builder, BGName): builder.PrependUint32Slot(5, BGName, 0)
def ScenarioScriptTestExcelAddBGName(builder, BGName):
    """This method is deprecated. Please switch to AddBGName."""
    return AddBGName(builder, BGName)
def AddBGEffect(builder, BGEffect): builder.PrependUint32Slot(6, BGEffect, 0)
def ScenarioScriptTestExcelAddBGEffect(builder, BGEffect):
    """This method is deprecated. Please switch to AddBGEffect."""
    return AddBGEffect(builder, BGEffect)
def AddPopupFileName(builder, PopupFileName): builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(PopupFileName), 0)
def ScenarioScriptTestExcelAddPopupFileName(builder, PopupFileName):
    """This method is deprecated. Please switch to AddPopupFileName."""
    return AddPopupFileName(builder, PopupFileName)
def AddScriptKr(builder, ScriptKr): builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(ScriptKr), 0)
def ScenarioScriptTestExcelAddScriptKr(builder, ScriptKr):
    """This method is deprecated. Please switch to AddScriptKr."""
    return AddScriptKr(builder, ScriptKr)
def AddTextJp(builder, TextJp): builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(TextJp), 0)
def ScenarioScriptTestExcelAddTextJp(builder, TextJp):
    """This method is deprecated. Please switch to AddTextJp."""
    return AddTextJp(builder, TextJp)
def AddTextTh(builder, TextTh): builder.PrependUOffsetTRelativeSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(TextTh), 0)
def ScenarioScriptTestExcelAddTextTh(builder, TextTh):
    """This method is deprecated. Please switch to AddTextTh."""
    return AddTextTh(builder, TextTh)
def AddTextTw(builder, TextTw): builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(TextTw), 0)
def ScenarioScriptTestExcelAddTextTw(builder, TextTw):
    """This method is deprecated. Please switch to AddTextTw."""
    return AddTextTw(builder, TextTw)
def AddTextEn(builder, TextEn): builder.PrependUOffsetTRelativeSlot(12, flatbuffers.number_types.UOffsetTFlags.py_type(TextEn), 0)
def ScenarioScriptTestExcelAddTextEn(builder, TextEn):
    """This method is deprecated. Please switch to AddTextEn."""
    return AddTextEn(builder, TextEn)
def AddTextDe(builder, TextDe): builder.PrependUOffsetTRelativeSlot(13, flatbuffers.number_types.UOffsetTFlags.py_type(TextDe), 0)
def ScenarioScriptTestExcelAddTextDe(builder, TextDe):
    """This method is deprecated. Please switch to AddTextDe."""
    return AddTextDe(builder, TextDe)
def AddTextFr(builder, TextFr): builder.PrependUOffsetTRelativeSlot(14, flatbuffers.number_types.UOffsetTFlags.py_type(TextFr), 0)
def ScenarioScriptTestExcelAddTextFr(builder, TextFr):
    """This method is deprecated. Please switch to AddTextFr."""
    return AddTextFr(builder, TextFr)
def AddVoiceJp(builder, VoiceJp): builder.PrependUOffsetTRelativeSlot(15, flatbuffers.number_types.UOffsetTFlags.py_type(VoiceJp), 0)
def ScenarioScriptTestExcelAddVoiceJp(builder, VoiceJp):
    """This method is deprecated. Please switch to AddVoiceJp."""
    return AddVoiceJp(builder, VoiceJp)
def End(builder): return builder.EndObject()
def ScenarioScriptTestExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)