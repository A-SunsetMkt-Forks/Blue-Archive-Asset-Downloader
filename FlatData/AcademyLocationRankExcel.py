# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class AcademyLocationRankExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = AcademyLocationRankExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsAcademyLocationRankExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # AcademyLocationRankExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # AcademyLocationRankExcel
    def Rank(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # AcademyLocationRankExcel
    def RankExp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # AcademyLocationRankExcel
    def TotalExp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(3)
def AcademyLocationRankExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddRank(builder, Rank): builder.PrependInt64Slot(0, Rank, 0)
def AcademyLocationRankExcelAddRank(builder, Rank):
    """This method is deprecated. Please switch to AddRank."""
    return AddRank(builder, Rank)
def AddRankExp(builder, RankExp): builder.PrependInt64Slot(1, RankExp, 0)
def AcademyLocationRankExcelAddRankExp(builder, RankExp):
    """This method is deprecated. Please switch to AddRankExp."""
    return AddRankExp(builder, RankExp)
def AddTotalExp(builder, TotalExp): builder.PrependInt64Slot(2, TotalExp, 0)
def AcademyLocationRankExcelAddTotalExp(builder, TotalExp):
    """This method is deprecated. Please switch to AddTotalExp."""
    return AddTotalExp(builder, TotalExp)
def End(builder): return builder.EndObject()
def AcademyLocationRankExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)