# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class RootMotionFlat(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = RootMotionFlat()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsRootMotionFlat(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # RootMotionFlat
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # RootMotionFlat
    def Forms(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from FlatData.Form import Form
            obj = Form()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # RootMotionFlat
    def FormsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # RootMotionFlat
    def FormsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

    # RootMotionFlat
    def ExSkills(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from FlatData.Motion import Motion
            obj = Motion()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # RootMotionFlat
    def ExSkillsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # RootMotionFlat
    def ExSkillsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

    # RootMotionFlat
    def MoveLeft(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from FlatData.Motion import Motion
            obj = Motion()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # RootMotionFlat
    def MoveRight(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from FlatData.Motion import Motion
            obj = Motion()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def Start(builder): builder.StartObject(4)
def RootMotionFlatStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddForms(builder, Forms): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(Forms), 0)
def RootMotionFlatAddForms(builder, Forms):
    """This method is deprecated. Please switch to AddForms."""
    return AddForms(builder, Forms)
def StartFormsVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def RootMotionFlatStartFormsVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartFormsVector(builder, numElems)
def AddExSkills(builder, ExSkills): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(ExSkills), 0)
def RootMotionFlatAddExSkills(builder, ExSkills):
    """This method is deprecated. Please switch to AddExSkills."""
    return AddExSkills(builder, ExSkills)
def StartExSkillsVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def RootMotionFlatStartExSkillsVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartExSkillsVector(builder, numElems)
def AddMoveLeft(builder, MoveLeft): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(MoveLeft), 0)
def RootMotionFlatAddMoveLeft(builder, MoveLeft):
    """This method is deprecated. Please switch to AddMoveLeft."""
    return AddMoveLeft(builder, MoveLeft)
def AddMoveRight(builder, MoveRight): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(MoveRight), 0)
def RootMotionFlatAddMoveRight(builder, MoveRight):
    """This method is deprecated. Please switch to AddMoveRight."""
    return AddMoveRight(builder, MoveRight)
def End(builder): return builder.EndObject()
def RootMotionFlatEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)