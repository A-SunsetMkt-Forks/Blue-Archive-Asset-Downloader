# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class GroundExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = GroundExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsGroundExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # GroundExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # GroundExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GroundExcel
    def StageFileName(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # GroundExcel
    def StageFileNameLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # GroundExcel
    def StageFileNameIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

    # GroundExcel
    def GroundSceneName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GroundExcel
    def FormationGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GroundExcel
    def StageTopography_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GroundExcel
    def EnemyArmorType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GroundExcel
    def LevelMinion(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GroundExcel
    def LevelElite(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GroundExcel
    def LevelChampion(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GroundExcel
    def LevelBoss(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GroundExcel
    def ObstacleLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GroundExcel
    def GradeMinion(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GroundExcel
    def GradeElite(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GroundExcel
    def GradeChampion(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GroundExcel
    def GradeBoss(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GroundExcel
    def PlayerSightPointAdd(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GroundExcel
    def PlayerSightPointRate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GroundExcel
    def PlayerAttackRangeAdd(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GroundExcel
    def PlayerAttackRangeRate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GroundExcel
    def EnemySightPointAdd(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GroundExcel
    def EnemySightPointRate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GroundExcel
    def EnemyAttackRangeAdd(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GroundExcel
    def EnemyAttackRangeRate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(48))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GroundExcel
    def PlayerSkillRangeAdd(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(50))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GroundExcel
    def PlayerSkillRangeRate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(52))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GroundExcel
    def EnemySkillRangeAdd(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(54))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GroundExcel
    def EnemySkillRangeRate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(56))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GroundExcel
    def TSSAirUnitHeight(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(58))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GroundExcel
    def IsRaid(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(60))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # GroundExcel
    def BGMId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(62))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GroundExcel
    def WarningUI(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(64))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # GroundExcel
    def TSSHatchOpen(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(66))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def Start(builder): builder.StartObject(32)
def GroundExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddId(builder, Id): builder.PrependInt64Slot(0, Id, 0)
def GroundExcelAddId(builder, Id):
    """This method is deprecated. Please switch to AddId."""
    return AddId(builder, Id)
def AddStageFileName(builder, StageFileName): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(StageFileName), 0)
def GroundExcelAddStageFileName(builder, StageFileName):
    """This method is deprecated. Please switch to AddStageFileName."""
    return AddStageFileName(builder, StageFileName)
def StartStageFileNameVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def GroundExcelStartStageFileNameVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartStageFileNameVector(builder, numElems)
def AddGroundSceneName(builder, GroundSceneName): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(GroundSceneName), 0)
def GroundExcelAddGroundSceneName(builder, GroundSceneName):
    """This method is deprecated. Please switch to AddGroundSceneName."""
    return AddGroundSceneName(builder, GroundSceneName)
def AddFormationGroupId(builder, FormationGroupId): builder.PrependInt64Slot(3, FormationGroupId, 0)
def GroundExcelAddFormationGroupId(builder, FormationGroupId):
    """This method is deprecated. Please switch to AddFormationGroupId."""
    return AddFormationGroupId(builder, FormationGroupId)
def AddStageTopography_(builder, StageTopography_): builder.PrependInt32Slot(4, StageTopography_, 0)
def GroundExcelAddStageTopography_(builder, StageTopography_):
    """This method is deprecated. Please switch to AddStageTopography_."""
    return AddStageTopography_(builder, StageTopography_)
def AddEnemyArmorType(builder, EnemyArmorType): builder.PrependInt32Slot(5, EnemyArmorType, 0)
def GroundExcelAddEnemyArmorType(builder, EnemyArmorType):
    """This method is deprecated. Please switch to AddEnemyArmorType."""
    return AddEnemyArmorType(builder, EnemyArmorType)
def AddLevelMinion(builder, LevelMinion): builder.PrependInt64Slot(6, LevelMinion, 0)
def GroundExcelAddLevelMinion(builder, LevelMinion):
    """This method is deprecated. Please switch to AddLevelMinion."""
    return AddLevelMinion(builder, LevelMinion)
def AddLevelElite(builder, LevelElite): builder.PrependInt64Slot(7, LevelElite, 0)
def GroundExcelAddLevelElite(builder, LevelElite):
    """This method is deprecated. Please switch to AddLevelElite."""
    return AddLevelElite(builder, LevelElite)
def AddLevelChampion(builder, LevelChampion): builder.PrependInt64Slot(8, LevelChampion, 0)
def GroundExcelAddLevelChampion(builder, LevelChampion):
    """This method is deprecated. Please switch to AddLevelChampion."""
    return AddLevelChampion(builder, LevelChampion)
def AddLevelBoss(builder, LevelBoss): builder.PrependInt64Slot(9, LevelBoss, 0)
def GroundExcelAddLevelBoss(builder, LevelBoss):
    """This method is deprecated. Please switch to AddLevelBoss."""
    return AddLevelBoss(builder, LevelBoss)
def AddObstacleLevel(builder, ObstacleLevel): builder.PrependInt64Slot(10, ObstacleLevel, 0)
def GroundExcelAddObstacleLevel(builder, ObstacleLevel):
    """This method is deprecated. Please switch to AddObstacleLevel."""
    return AddObstacleLevel(builder, ObstacleLevel)
def AddGradeMinion(builder, GradeMinion): builder.PrependInt64Slot(11, GradeMinion, 0)
def GroundExcelAddGradeMinion(builder, GradeMinion):
    """This method is deprecated. Please switch to AddGradeMinion."""
    return AddGradeMinion(builder, GradeMinion)
def AddGradeElite(builder, GradeElite): builder.PrependInt64Slot(12, GradeElite, 0)
def GroundExcelAddGradeElite(builder, GradeElite):
    """This method is deprecated. Please switch to AddGradeElite."""
    return AddGradeElite(builder, GradeElite)
def AddGradeChampion(builder, GradeChampion): builder.PrependInt64Slot(13, GradeChampion, 0)
def GroundExcelAddGradeChampion(builder, GradeChampion):
    """This method is deprecated. Please switch to AddGradeChampion."""
    return AddGradeChampion(builder, GradeChampion)
def AddGradeBoss(builder, GradeBoss): builder.PrependInt64Slot(14, GradeBoss, 0)
def GroundExcelAddGradeBoss(builder, GradeBoss):
    """This method is deprecated. Please switch to AddGradeBoss."""
    return AddGradeBoss(builder, GradeBoss)
def AddPlayerSightPointAdd(builder, PlayerSightPointAdd): builder.PrependInt64Slot(15, PlayerSightPointAdd, 0)
def GroundExcelAddPlayerSightPointAdd(builder, PlayerSightPointAdd):
    """This method is deprecated. Please switch to AddPlayerSightPointAdd."""
    return AddPlayerSightPointAdd(builder, PlayerSightPointAdd)
def AddPlayerSightPointRate(builder, PlayerSightPointRate): builder.PrependInt64Slot(16, PlayerSightPointRate, 0)
def GroundExcelAddPlayerSightPointRate(builder, PlayerSightPointRate):
    """This method is deprecated. Please switch to AddPlayerSightPointRate."""
    return AddPlayerSightPointRate(builder, PlayerSightPointRate)
def AddPlayerAttackRangeAdd(builder, PlayerAttackRangeAdd): builder.PrependInt64Slot(17, PlayerAttackRangeAdd, 0)
def GroundExcelAddPlayerAttackRangeAdd(builder, PlayerAttackRangeAdd):
    """This method is deprecated. Please switch to AddPlayerAttackRangeAdd."""
    return AddPlayerAttackRangeAdd(builder, PlayerAttackRangeAdd)
def AddPlayerAttackRangeRate(builder, PlayerAttackRangeRate): builder.PrependInt64Slot(18, PlayerAttackRangeRate, 0)
def GroundExcelAddPlayerAttackRangeRate(builder, PlayerAttackRangeRate):
    """This method is deprecated. Please switch to AddPlayerAttackRangeRate."""
    return AddPlayerAttackRangeRate(builder, PlayerAttackRangeRate)
def AddEnemySightPointAdd(builder, EnemySightPointAdd): builder.PrependInt64Slot(19, EnemySightPointAdd, 0)
def GroundExcelAddEnemySightPointAdd(builder, EnemySightPointAdd):
    """This method is deprecated. Please switch to AddEnemySightPointAdd."""
    return AddEnemySightPointAdd(builder, EnemySightPointAdd)
def AddEnemySightPointRate(builder, EnemySightPointRate): builder.PrependInt64Slot(20, EnemySightPointRate, 0)
def GroundExcelAddEnemySightPointRate(builder, EnemySightPointRate):
    """This method is deprecated. Please switch to AddEnemySightPointRate."""
    return AddEnemySightPointRate(builder, EnemySightPointRate)
def AddEnemyAttackRangeAdd(builder, EnemyAttackRangeAdd): builder.PrependInt64Slot(21, EnemyAttackRangeAdd, 0)
def GroundExcelAddEnemyAttackRangeAdd(builder, EnemyAttackRangeAdd):
    """This method is deprecated. Please switch to AddEnemyAttackRangeAdd."""
    return AddEnemyAttackRangeAdd(builder, EnemyAttackRangeAdd)
def AddEnemyAttackRangeRate(builder, EnemyAttackRangeRate): builder.PrependInt64Slot(22, EnemyAttackRangeRate, 0)
def GroundExcelAddEnemyAttackRangeRate(builder, EnemyAttackRangeRate):
    """This method is deprecated. Please switch to AddEnemyAttackRangeRate."""
    return AddEnemyAttackRangeRate(builder, EnemyAttackRangeRate)
def AddPlayerSkillRangeAdd(builder, PlayerSkillRangeAdd): builder.PrependInt64Slot(23, PlayerSkillRangeAdd, 0)
def GroundExcelAddPlayerSkillRangeAdd(builder, PlayerSkillRangeAdd):
    """This method is deprecated. Please switch to AddPlayerSkillRangeAdd."""
    return AddPlayerSkillRangeAdd(builder, PlayerSkillRangeAdd)
def AddPlayerSkillRangeRate(builder, PlayerSkillRangeRate): builder.PrependInt64Slot(24, PlayerSkillRangeRate, 0)
def GroundExcelAddPlayerSkillRangeRate(builder, PlayerSkillRangeRate):
    """This method is deprecated. Please switch to AddPlayerSkillRangeRate."""
    return AddPlayerSkillRangeRate(builder, PlayerSkillRangeRate)
def AddEnemySkillRangeAdd(builder, EnemySkillRangeAdd): builder.PrependInt64Slot(25, EnemySkillRangeAdd, 0)
def GroundExcelAddEnemySkillRangeAdd(builder, EnemySkillRangeAdd):
    """This method is deprecated. Please switch to AddEnemySkillRangeAdd."""
    return AddEnemySkillRangeAdd(builder, EnemySkillRangeAdd)
def AddEnemySkillRangeRate(builder, EnemySkillRangeRate): builder.PrependInt64Slot(26, EnemySkillRangeRate, 0)
def GroundExcelAddEnemySkillRangeRate(builder, EnemySkillRangeRate):
    """This method is deprecated. Please switch to AddEnemySkillRangeRate."""
    return AddEnemySkillRangeRate(builder, EnemySkillRangeRate)
def AddTSSAirUnitHeight(builder, TSSAirUnitHeight): builder.PrependInt64Slot(27, TSSAirUnitHeight, 0)
def GroundExcelAddTSSAirUnitHeight(builder, TSSAirUnitHeight):
    """This method is deprecated. Please switch to AddTSSAirUnitHeight."""
    return AddTSSAirUnitHeight(builder, TSSAirUnitHeight)
def AddIsRaid(builder, IsRaid): builder.PrependBoolSlot(28, IsRaid, 0)
def GroundExcelAddIsRaid(builder, IsRaid):
    """This method is deprecated. Please switch to AddIsRaid."""
    return AddIsRaid(builder, IsRaid)
def AddBGMId(builder, BGMId): builder.PrependInt64Slot(29, BGMId, 0)
def GroundExcelAddBGMId(builder, BGMId):
    """This method is deprecated. Please switch to AddBGMId."""
    return AddBGMId(builder, BGMId)
def AddWarningUI(builder, WarningUI): builder.PrependBoolSlot(30, WarningUI, 0)
def GroundExcelAddWarningUI(builder, WarningUI):
    """This method is deprecated. Please switch to AddWarningUI."""
    return AddWarningUI(builder, WarningUI)
def AddTSSHatchOpen(builder, TSSHatchOpen): builder.PrependBoolSlot(31, TSSHatchOpen, 0)
def GroundExcelAddTSSHatchOpen(builder, TSSHatchOpen):
    """This method is deprecated. Please switch to AddTSSHatchOpen."""
    return AddTSSHatchOpen(builder, TSSHatchOpen)
def End(builder): return builder.EndObject()
def GroundExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)