# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class CampaignChapterExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CampaignChapterExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsCampaignChapterExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # CampaignChapterExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # CampaignChapterExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignChapterExcel
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CampaignChapterExcel
    def NormalImagePath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CampaignChapterExcel
    def HardImagePath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CampaignChapterExcel
    def Order(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignChapterExcel
    def PreChapterId(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int64Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 8))
        return 0

    # CampaignChapterExcel
    def PreChapterIdAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int64Flags, o)
        return 0

    # CampaignChapterExcel
    def PreChapterIdLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # CampaignChapterExcel
    def PreChapterIdIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        return o == 0

    # CampaignChapterExcel
    def ChapterRewardId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignChapterExcel
    def ChapterHardRewardId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignChapterExcel
    def ChapterVeryHardRewardId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignChapterExcel
    def NormalCampaignStageId(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int64Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 8))
        return 0

    # CampaignChapterExcel
    def NormalCampaignStageIdAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int64Flags, o)
        return 0

    # CampaignChapterExcel
    def NormalCampaignStageIdLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # CampaignChapterExcel
    def NormalCampaignStageIdIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        return o == 0

    # CampaignChapterExcel
    def HardCampaignStageId(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int64Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 8))
        return 0

    # CampaignChapterExcel
    def HardCampaignStageIdAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int64Flags, o)
        return 0

    # CampaignChapterExcel
    def HardCampaignStageIdLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # CampaignChapterExcel
    def HardCampaignStageIdIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        return o == 0

    # CampaignChapterExcel
    def VeryHardCampaignStageId(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int64Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 8))
        return 0

    # CampaignChapterExcel
    def VeryHardCampaignStageIdAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int64Flags, o)
        return 0

    # CampaignChapterExcel
    def VeryHardCampaignStageIdLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # CampaignChapterExcel
    def VeryHardCampaignStageIdIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        return o == 0

def Start(builder): builder.StartObject(12)
def CampaignChapterExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddId(builder, Id): builder.PrependInt64Slot(0, Id, 0)
def CampaignChapterExcelAddId(builder, Id):
    """This method is deprecated. Please switch to AddId."""
    return AddId(builder, Id)
def AddName(builder, Name): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(Name), 0)
def CampaignChapterExcelAddName(builder, Name):
    """This method is deprecated. Please switch to AddName."""
    return AddName(builder, Name)
def AddNormalImagePath(builder, NormalImagePath): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(NormalImagePath), 0)
def CampaignChapterExcelAddNormalImagePath(builder, NormalImagePath):
    """This method is deprecated. Please switch to AddNormalImagePath."""
    return AddNormalImagePath(builder, NormalImagePath)
def AddHardImagePath(builder, HardImagePath): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(HardImagePath), 0)
def CampaignChapterExcelAddHardImagePath(builder, HardImagePath):
    """This method is deprecated. Please switch to AddHardImagePath."""
    return AddHardImagePath(builder, HardImagePath)
def AddOrder(builder, Order): builder.PrependInt64Slot(4, Order, 0)
def CampaignChapterExcelAddOrder(builder, Order):
    """This method is deprecated. Please switch to AddOrder."""
    return AddOrder(builder, Order)
def AddPreChapterId(builder, PreChapterId): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(PreChapterId), 0)
def CampaignChapterExcelAddPreChapterId(builder, PreChapterId):
    """This method is deprecated. Please switch to AddPreChapterId."""
    return AddPreChapterId(builder, PreChapterId)
def StartPreChapterIdVector(builder, numElems): return builder.StartVector(8, numElems, 8)
def CampaignChapterExcelStartPreChapterIdVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartPreChapterIdVector(builder, numElems)
def AddChapterRewardId(builder, ChapterRewardId): builder.PrependInt64Slot(6, ChapterRewardId, 0)
def CampaignChapterExcelAddChapterRewardId(builder, ChapterRewardId):
    """This method is deprecated. Please switch to AddChapterRewardId."""
    return AddChapterRewardId(builder, ChapterRewardId)
def AddChapterHardRewardId(builder, ChapterHardRewardId): builder.PrependInt64Slot(7, ChapterHardRewardId, 0)
def CampaignChapterExcelAddChapterHardRewardId(builder, ChapterHardRewardId):
    """This method is deprecated. Please switch to AddChapterHardRewardId."""
    return AddChapterHardRewardId(builder, ChapterHardRewardId)
def AddChapterVeryHardRewardId(builder, ChapterVeryHardRewardId): builder.PrependInt64Slot(8, ChapterVeryHardRewardId, 0)
def CampaignChapterExcelAddChapterVeryHardRewardId(builder, ChapterVeryHardRewardId):
    """This method is deprecated. Please switch to AddChapterVeryHardRewardId."""
    return AddChapterVeryHardRewardId(builder, ChapterVeryHardRewardId)
def AddNormalCampaignStageId(builder, NormalCampaignStageId): builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(NormalCampaignStageId), 0)
def CampaignChapterExcelAddNormalCampaignStageId(builder, NormalCampaignStageId):
    """This method is deprecated. Please switch to AddNormalCampaignStageId."""
    return AddNormalCampaignStageId(builder, NormalCampaignStageId)
def StartNormalCampaignStageIdVector(builder, numElems): return builder.StartVector(8, numElems, 8)
def CampaignChapterExcelStartNormalCampaignStageIdVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartNormalCampaignStageIdVector(builder, numElems)
def AddHardCampaignStageId(builder, HardCampaignStageId): builder.PrependUOffsetTRelativeSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(HardCampaignStageId), 0)
def CampaignChapterExcelAddHardCampaignStageId(builder, HardCampaignStageId):
    """This method is deprecated. Please switch to AddHardCampaignStageId."""
    return AddHardCampaignStageId(builder, HardCampaignStageId)
def StartHardCampaignStageIdVector(builder, numElems): return builder.StartVector(8, numElems, 8)
def CampaignChapterExcelStartHardCampaignStageIdVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartHardCampaignStageIdVector(builder, numElems)
def AddVeryHardCampaignStageId(builder, VeryHardCampaignStageId): builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(VeryHardCampaignStageId), 0)
def CampaignChapterExcelAddVeryHardCampaignStageId(builder, VeryHardCampaignStageId):
    """This method is deprecated. Please switch to AddVeryHardCampaignStageId."""
    return AddVeryHardCampaignStageId(builder, VeryHardCampaignStageId)
def StartVeryHardCampaignStageIdVector(builder, numElems): return builder.StartVector(8, numElems, 8)
def CampaignChapterExcelStartVeryHardCampaignStageIdVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartVeryHardCampaignStageIdVector(builder, numElems)
def End(builder): return builder.EndObject()
def CampaignChapterExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)