# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class MessagePopupExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = MessagePopupExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsMessagePopupExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # MessagePopupExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # MessagePopupExcel
    def StringId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # MessagePopupExcel
    def MessagePopupLayout_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # MessagePopupExcel
    def OrderType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # MessagePopupExcel
    def Image(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # MessagePopupExcel
    def TitleText(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # MessagePopupExcel
    def MessageText(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # MessagePopupExcel
    def DisplayXButton(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # MessagePopupExcel
    def Button(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # MessagePopupExcel
    def ButtonAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # MessagePopupExcel
    def ButtonLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # MessagePopupExcel
    def ButtonIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        return o == 0

    # MessagePopupExcel
    def ButtonText(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # MessagePopupExcel
    def ButtonTextAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint32Flags, o)
        return 0

    # MessagePopupExcel
    def ButtonTextLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # MessagePopupExcel
    def ButtonTextIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        return o == 0

    # MessagePopupExcel
    def ButtonCommand(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # MessagePopupExcel
    def ButtonCommandLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # MessagePopupExcel
    def ButtonCommandIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        return o == 0

    # MessagePopupExcel
    def ButtonParameter(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # MessagePopupExcel
    def ButtonParameterLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # MessagePopupExcel
    def ButtonParameterIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        return o == 0

def Start(builder): builder.StartObject(11)
def MessagePopupExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddStringId(builder, StringId): builder.PrependUint32Slot(0, StringId, 0)
def MessagePopupExcelAddStringId(builder, StringId):
    """This method is deprecated. Please switch to AddStringId."""
    return AddStringId(builder, StringId)
def AddMessagePopupLayout_(builder, MessagePopupLayout_): builder.PrependInt32Slot(1, MessagePopupLayout_, 0)
def MessagePopupExcelAddMessagePopupLayout_(builder, MessagePopupLayout_):
    """This method is deprecated. Please switch to AddMessagePopupLayout_."""
    return AddMessagePopupLayout_(builder, MessagePopupLayout_)
def AddOrderType(builder, OrderType): builder.PrependInt32Slot(2, OrderType, 0)
def MessagePopupExcelAddOrderType(builder, OrderType):
    """This method is deprecated. Please switch to AddOrderType."""
    return AddOrderType(builder, OrderType)
def AddImage(builder, Image): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(Image), 0)
def MessagePopupExcelAddImage(builder, Image):
    """This method is deprecated. Please switch to AddImage."""
    return AddImage(builder, Image)
def AddTitleText(builder, TitleText): builder.PrependUint32Slot(4, TitleText, 0)
def MessagePopupExcelAddTitleText(builder, TitleText):
    """This method is deprecated. Please switch to AddTitleText."""
    return AddTitleText(builder, TitleText)
def AddMessageText(builder, MessageText): builder.PrependUint32Slot(5, MessageText, 0)
def MessagePopupExcelAddMessageText(builder, MessageText):
    """This method is deprecated. Please switch to AddMessageText."""
    return AddMessageText(builder, MessageText)
def AddDisplayXButton(builder, DisplayXButton): builder.PrependBoolSlot(6, DisplayXButton, 0)
def MessagePopupExcelAddDisplayXButton(builder, DisplayXButton):
    """This method is deprecated. Please switch to AddDisplayXButton."""
    return AddDisplayXButton(builder, DisplayXButton)
def AddButton(builder, Button): builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(Button), 0)
def MessagePopupExcelAddButton(builder, Button):
    """This method is deprecated. Please switch to AddButton."""
    return AddButton(builder, Button)
def StartButtonVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def MessagePopupExcelStartButtonVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartButtonVector(builder, numElems)
def AddButtonText(builder, ButtonText): builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(ButtonText), 0)
def MessagePopupExcelAddButtonText(builder, ButtonText):
    """This method is deprecated. Please switch to AddButtonText."""
    return AddButtonText(builder, ButtonText)
def StartButtonTextVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def MessagePopupExcelStartButtonTextVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartButtonTextVector(builder, numElems)
def AddButtonCommand(builder, ButtonCommand): builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(ButtonCommand), 0)
def MessagePopupExcelAddButtonCommand(builder, ButtonCommand):
    """This method is deprecated. Please switch to AddButtonCommand."""
    return AddButtonCommand(builder, ButtonCommand)
def StartButtonCommandVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def MessagePopupExcelStartButtonCommandVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartButtonCommandVector(builder, numElems)
def AddButtonParameter(builder, ButtonParameter): builder.PrependUOffsetTRelativeSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(ButtonParameter), 0)
def MessagePopupExcelAddButtonParameter(builder, ButtonParameter):
    """This method is deprecated. Please switch to AddButtonParameter."""
    return AddButtonParameter(builder, ButtonParameter)
def StartButtonParameterVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def MessagePopupExcelStartButtonParameterVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartButtonParameterVector(builder, numElems)
def End(builder): return builder.EndObject()
def MessagePopupExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)