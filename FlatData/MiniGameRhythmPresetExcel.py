# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class MiniGameRhythmPresetExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = MiniGameRhythmPresetExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsMiniGameRhythmPresetExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # MiniGameRhythmPresetExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # MiniGameRhythmPresetExcel
    def PresetId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # MiniGameRhythmPresetExcel
    def CameraId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # MiniGameRhythmPresetExcel
    def PCSpawnPositionX(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # MiniGameRhythmPresetExcel
    def PCSpawnPositionY(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # MiniGameRhythmPresetExcel
    def DetectionLinePositionX(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # MiniGameRhythmPresetExcel
    def DetectionLinePositionY(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # MiniGameRhythmPresetExcel
    def Speed(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # MiniGameRhythmPresetExcel
    def RhythmNoteObjectLeft(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # MiniGameRhythmPresetExcel
    def RhythmNoteObjectRight(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # MiniGameRhythmPresetExcel
    def RhythmNoteObjectBoth(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # MiniGameRhythmPresetExcel
    def JudgeValuesCritical(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # MiniGameRhythmPresetExcel
    def JudgeValuesAttack(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

def Start(builder): builder.StartObject(12)
def MiniGameRhythmPresetExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddPresetId(builder, PresetId): builder.PrependInt64Slot(0, PresetId, 0)
def MiniGameRhythmPresetExcelAddPresetId(builder, PresetId):
    """This method is deprecated. Please switch to AddPresetId."""
    return AddPresetId(builder, PresetId)
def AddCameraId(builder, CameraId): builder.PrependInt64Slot(1, CameraId, 0)
def MiniGameRhythmPresetExcelAddCameraId(builder, CameraId):
    """This method is deprecated. Please switch to AddCameraId."""
    return AddCameraId(builder, CameraId)
def AddPCSpawnPositionX(builder, PCSpawnPositionX): builder.PrependFloat32Slot(2, PCSpawnPositionX, 0.0)
def MiniGameRhythmPresetExcelAddPCSpawnPositionX(builder, PCSpawnPositionX):
    """This method is deprecated. Please switch to AddPCSpawnPositionX."""
    return AddPCSpawnPositionX(builder, PCSpawnPositionX)
def AddPCSpawnPositionY(builder, PCSpawnPositionY): builder.PrependFloat32Slot(3, PCSpawnPositionY, 0.0)
def MiniGameRhythmPresetExcelAddPCSpawnPositionY(builder, PCSpawnPositionY):
    """This method is deprecated. Please switch to AddPCSpawnPositionY."""
    return AddPCSpawnPositionY(builder, PCSpawnPositionY)
def AddDetectionLinePositionX(builder, DetectionLinePositionX): builder.PrependFloat32Slot(4, DetectionLinePositionX, 0.0)
def MiniGameRhythmPresetExcelAddDetectionLinePositionX(builder, DetectionLinePositionX):
    """This method is deprecated. Please switch to AddDetectionLinePositionX."""
    return AddDetectionLinePositionX(builder, DetectionLinePositionX)
def AddDetectionLinePositionY(builder, DetectionLinePositionY): builder.PrependFloat32Slot(5, DetectionLinePositionY, 0.0)
def MiniGameRhythmPresetExcelAddDetectionLinePositionY(builder, DetectionLinePositionY):
    """This method is deprecated. Please switch to AddDetectionLinePositionY."""
    return AddDetectionLinePositionY(builder, DetectionLinePositionY)
def AddSpeed(builder, Speed): builder.PrependFloat32Slot(6, Speed, 0.0)
def MiniGameRhythmPresetExcelAddSpeed(builder, Speed):
    """This method is deprecated. Please switch to AddSpeed."""
    return AddSpeed(builder, Speed)
def AddRhythmNoteObjectLeft(builder, RhythmNoteObjectLeft): builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(RhythmNoteObjectLeft), 0)
def MiniGameRhythmPresetExcelAddRhythmNoteObjectLeft(builder, RhythmNoteObjectLeft):
    """This method is deprecated. Please switch to AddRhythmNoteObjectLeft."""
    return AddRhythmNoteObjectLeft(builder, RhythmNoteObjectLeft)
def AddRhythmNoteObjectRight(builder, RhythmNoteObjectRight): builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(RhythmNoteObjectRight), 0)
def MiniGameRhythmPresetExcelAddRhythmNoteObjectRight(builder, RhythmNoteObjectRight):
    """This method is deprecated. Please switch to AddRhythmNoteObjectRight."""
    return AddRhythmNoteObjectRight(builder, RhythmNoteObjectRight)
def AddRhythmNoteObjectBoth(builder, RhythmNoteObjectBoth): builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(RhythmNoteObjectBoth), 0)
def MiniGameRhythmPresetExcelAddRhythmNoteObjectBoth(builder, RhythmNoteObjectBoth):
    """This method is deprecated. Please switch to AddRhythmNoteObjectBoth."""
    return AddRhythmNoteObjectBoth(builder, RhythmNoteObjectBoth)
def AddJudgeValuesCritical(builder, JudgeValuesCritical): builder.PrependFloat32Slot(10, JudgeValuesCritical, 0.0)
def MiniGameRhythmPresetExcelAddJudgeValuesCritical(builder, JudgeValuesCritical):
    """This method is deprecated. Please switch to AddJudgeValuesCritical."""
    return AddJudgeValuesCritical(builder, JudgeValuesCritical)
def AddJudgeValuesAttack(builder, JudgeValuesAttack): builder.PrependFloat32Slot(11, JudgeValuesAttack, 0.0)
def MiniGameRhythmPresetExcelAddJudgeValuesAttack(builder, JudgeValuesAttack):
    """This method is deprecated. Please switch to AddJudgeValuesAttack."""
    return AddJudgeValuesAttack(builder, JudgeValuesAttack)
def End(builder): return builder.EndObject()
def MiniGameRhythmPresetExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)