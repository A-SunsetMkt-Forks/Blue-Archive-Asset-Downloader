# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class CharacterAIExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CharacterAIExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsCharacterAIExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # CharacterAIExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # CharacterAIExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterAIExcel
    def EngageType_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CharacterAIExcel
    def Positioning(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CharacterAIExcel
    def DistanceReduceRatioObstaclePath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterAIExcel
    def DistanceReduceObstaclePath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterAIExcel
    def DistanceReduceRatioFormationPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterAIExcel
    def DistanceReduceFormationPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterAIExcel
    def MinimumPositionGap(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterAIExcel
    def CanUseObstacleOfKneelMotion(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # CharacterAIExcel
    def CanUseObstacleOfStandMotion(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # CharacterAIExcel
    def HasTargetSwitchingMotion(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def Start(builder): builder.StartObject(11)
def CharacterAIExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddId(builder, Id): builder.PrependInt64Slot(0, Id, 0)
def CharacterAIExcelAddId(builder, Id):
    """This method is deprecated. Please switch to AddId."""
    return AddId(builder, Id)
def AddEngageType_(builder, EngageType_): builder.PrependInt32Slot(1, EngageType_, 0)
def CharacterAIExcelAddEngageType_(builder, EngageType_):
    """This method is deprecated. Please switch to AddEngageType_."""
    return AddEngageType_(builder, EngageType_)
def AddPositioning(builder, Positioning): builder.PrependInt32Slot(2, Positioning, 0)
def CharacterAIExcelAddPositioning(builder, Positioning):
    """This method is deprecated. Please switch to AddPositioning."""
    return AddPositioning(builder, Positioning)
def AddDistanceReduceRatioObstaclePath(builder, DistanceReduceRatioObstaclePath): builder.PrependInt64Slot(3, DistanceReduceRatioObstaclePath, 0)
def CharacterAIExcelAddDistanceReduceRatioObstaclePath(builder, DistanceReduceRatioObstaclePath):
    """This method is deprecated. Please switch to AddDistanceReduceRatioObstaclePath."""
    return AddDistanceReduceRatioObstaclePath(builder, DistanceReduceRatioObstaclePath)
def AddDistanceReduceObstaclePath(builder, DistanceReduceObstaclePath): builder.PrependInt64Slot(4, DistanceReduceObstaclePath, 0)
def CharacterAIExcelAddDistanceReduceObstaclePath(builder, DistanceReduceObstaclePath):
    """This method is deprecated. Please switch to AddDistanceReduceObstaclePath."""
    return AddDistanceReduceObstaclePath(builder, DistanceReduceObstaclePath)
def AddDistanceReduceRatioFormationPath(builder, DistanceReduceRatioFormationPath): builder.PrependInt64Slot(5, DistanceReduceRatioFormationPath, 0)
def CharacterAIExcelAddDistanceReduceRatioFormationPath(builder, DistanceReduceRatioFormationPath):
    """This method is deprecated. Please switch to AddDistanceReduceRatioFormationPath."""
    return AddDistanceReduceRatioFormationPath(builder, DistanceReduceRatioFormationPath)
def AddDistanceReduceFormationPath(builder, DistanceReduceFormationPath): builder.PrependInt64Slot(6, DistanceReduceFormationPath, 0)
def CharacterAIExcelAddDistanceReduceFormationPath(builder, DistanceReduceFormationPath):
    """This method is deprecated. Please switch to AddDistanceReduceFormationPath."""
    return AddDistanceReduceFormationPath(builder, DistanceReduceFormationPath)
def AddMinimumPositionGap(builder, MinimumPositionGap): builder.PrependInt64Slot(7, MinimumPositionGap, 0)
def CharacterAIExcelAddMinimumPositionGap(builder, MinimumPositionGap):
    """This method is deprecated. Please switch to AddMinimumPositionGap."""
    return AddMinimumPositionGap(builder, MinimumPositionGap)
def AddCanUseObstacleOfKneelMotion(builder, CanUseObstacleOfKneelMotion): builder.PrependBoolSlot(8, CanUseObstacleOfKneelMotion, 0)
def CharacterAIExcelAddCanUseObstacleOfKneelMotion(builder, CanUseObstacleOfKneelMotion):
    """This method is deprecated. Please switch to AddCanUseObstacleOfKneelMotion."""
    return AddCanUseObstacleOfKneelMotion(builder, CanUseObstacleOfKneelMotion)
def AddCanUseObstacleOfStandMotion(builder, CanUseObstacleOfStandMotion): builder.PrependBoolSlot(9, CanUseObstacleOfStandMotion, 0)
def CharacterAIExcelAddCanUseObstacleOfStandMotion(builder, CanUseObstacleOfStandMotion):
    """This method is deprecated. Please switch to AddCanUseObstacleOfStandMotion."""
    return AddCanUseObstacleOfStandMotion(builder, CanUseObstacleOfStandMotion)
def AddHasTargetSwitchingMotion(builder, HasTargetSwitchingMotion): builder.PrependBoolSlot(10, HasTargetSwitchingMotion, 0)
def CharacterAIExcelAddHasTargetSwitchingMotion(builder, HasTargetSwitchingMotion):
    """This method is deprecated. Please switch to AddHasTargetSwitchingMotion."""
    return AddHasTargetSwitchingMotion(builder, HasTargetSwitchingMotion)
def End(builder): return builder.EndObject()
def CharacterAIExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)