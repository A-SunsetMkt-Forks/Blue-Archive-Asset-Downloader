# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class MemoryLobbyExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = MemoryLobbyExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsMemoryLobbyExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # MemoryLobbyExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # MemoryLobbyExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # MemoryLobbyExcel
    def ProductionStep_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # MemoryLobbyExcel
    def LocalizeEtcId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # MemoryLobbyExcel
    def CharacterId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # MemoryLobbyExcel
    def PrefabName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # MemoryLobbyExcel
    def SlotTextureName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # MemoryLobbyExcel
    def RewardTextureName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # MemoryLobbyExcel
    def BGMId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # MemoryLobbyExcel
    def AudioClipJp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # MemoryLobbyExcel
    def AudioClipKr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # MemoryLobbyExcel
    def AudioClipTh(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # MemoryLobbyExcel
    def AudioClipTw(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # MemoryLobbyExcel
    def AudioClipEn(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # MemoryLobbyExcel
    def AudioClipDe(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # MemoryLobbyExcel
    def AudioClipFr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def Start(builder): builder.StartObject(15)
def MemoryLobbyExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddId(builder, Id): builder.PrependInt64Slot(0, Id, 0)
def MemoryLobbyExcelAddId(builder, Id):
    """This method is deprecated. Please switch to AddId."""
    return AddId(builder, Id)
def AddProductionStep_(builder, ProductionStep_): builder.PrependInt32Slot(1, ProductionStep_, 0)
def MemoryLobbyExcelAddProductionStep_(builder, ProductionStep_):
    """This method is deprecated. Please switch to AddProductionStep_."""
    return AddProductionStep_(builder, ProductionStep_)
def AddLocalizeEtcId(builder, LocalizeEtcId): builder.PrependUint32Slot(2, LocalizeEtcId, 0)
def MemoryLobbyExcelAddLocalizeEtcId(builder, LocalizeEtcId):
    """This method is deprecated. Please switch to AddLocalizeEtcId."""
    return AddLocalizeEtcId(builder, LocalizeEtcId)
def AddCharacterId(builder, CharacterId): builder.PrependInt64Slot(3, CharacterId, 0)
def MemoryLobbyExcelAddCharacterId(builder, CharacterId):
    """This method is deprecated. Please switch to AddCharacterId."""
    return AddCharacterId(builder, CharacterId)
def AddPrefabName(builder, PrefabName): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(PrefabName), 0)
def MemoryLobbyExcelAddPrefabName(builder, PrefabName):
    """This method is deprecated. Please switch to AddPrefabName."""
    return AddPrefabName(builder, PrefabName)
def AddSlotTextureName(builder, SlotTextureName): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(SlotTextureName), 0)
def MemoryLobbyExcelAddSlotTextureName(builder, SlotTextureName):
    """This method is deprecated. Please switch to AddSlotTextureName."""
    return AddSlotTextureName(builder, SlotTextureName)
def AddRewardTextureName(builder, RewardTextureName): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(RewardTextureName), 0)
def MemoryLobbyExcelAddRewardTextureName(builder, RewardTextureName):
    """This method is deprecated. Please switch to AddRewardTextureName."""
    return AddRewardTextureName(builder, RewardTextureName)
def AddBGMId(builder, BGMId): builder.PrependInt64Slot(7, BGMId, 0)
def MemoryLobbyExcelAddBGMId(builder, BGMId):
    """This method is deprecated. Please switch to AddBGMId."""
    return AddBGMId(builder, BGMId)
def AddAudioClipJp(builder, AudioClipJp): builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(AudioClipJp), 0)
def MemoryLobbyExcelAddAudioClipJp(builder, AudioClipJp):
    """This method is deprecated. Please switch to AddAudioClipJp."""
    return AddAudioClipJp(builder, AudioClipJp)
def AddAudioClipKr(builder, AudioClipKr): builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(AudioClipKr), 0)
def MemoryLobbyExcelAddAudioClipKr(builder, AudioClipKr):
    """This method is deprecated. Please switch to AddAudioClipKr."""
    return AddAudioClipKr(builder, AudioClipKr)
def AddAudioClipTh(builder, AudioClipTh): builder.PrependUOffsetTRelativeSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(AudioClipTh), 0)
def MemoryLobbyExcelAddAudioClipTh(builder, AudioClipTh):
    """This method is deprecated. Please switch to AddAudioClipTh."""
    return AddAudioClipTh(builder, AudioClipTh)
def AddAudioClipTw(builder, AudioClipTw): builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(AudioClipTw), 0)
def MemoryLobbyExcelAddAudioClipTw(builder, AudioClipTw):
    """This method is deprecated. Please switch to AddAudioClipTw."""
    return AddAudioClipTw(builder, AudioClipTw)
def AddAudioClipEn(builder, AudioClipEn): builder.PrependUOffsetTRelativeSlot(12, flatbuffers.number_types.UOffsetTFlags.py_type(AudioClipEn), 0)
def MemoryLobbyExcelAddAudioClipEn(builder, AudioClipEn):
    """This method is deprecated. Please switch to AddAudioClipEn."""
    return AddAudioClipEn(builder, AudioClipEn)
def AddAudioClipDe(builder, AudioClipDe): builder.PrependUOffsetTRelativeSlot(13, flatbuffers.number_types.UOffsetTFlags.py_type(AudioClipDe), 0)
def MemoryLobbyExcelAddAudioClipDe(builder, AudioClipDe):
    """This method is deprecated. Please switch to AddAudioClipDe."""
    return AddAudioClipDe(builder, AudioClipDe)
def AddAudioClipFr(builder, AudioClipFr): builder.PrependUOffsetTRelativeSlot(14, flatbuffers.number_types.UOffsetTFlags.py_type(AudioClipFr), 0)
def MemoryLobbyExcelAddAudioClipFr(builder, AudioClipFr):
    """This method is deprecated. Please switch to AddAudioClipFr."""
    return AddAudioClipFr(builder, AudioClipFr)
def End(builder): return builder.EndObject()
def MemoryLobbyExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)