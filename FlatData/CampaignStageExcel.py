# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class CampaignStageExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CampaignStageExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsCampaignStageExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # CampaignStageExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # CampaignStageExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CampaignStageExcel
    def StageNumber(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def CleardScenarioId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def BattleDuration(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def StageEnterCostType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def StageEnterCostAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def StageEnterEchelonCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def StarConditionTacticRankSCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def StarConditionTurnCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def EnterScenarioGroupId(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int64Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 8))
        return 0

    # CampaignStageExcel
    def EnterScenarioGroupIdAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int64Flags, o)
        return 0

    # CampaignStageExcel
    def EnterScenarioGroupIdLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # CampaignStageExcel
    def EnterScenarioGroupIdIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        return o == 0

    # CampaignStageExcel
    def ClearScenarioGroupId(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int64Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 8))
        return 0

    # CampaignStageExcel
    def ClearScenarioGroupIdAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int64Flags, o)
        return 0

    # CampaignStageExcel
    def ClearScenarioGroupIdLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # CampaignStageExcel
    def ClearScenarioGroupIdIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        return o == 0

    # CampaignStageExcel
    def StrategyMap(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CampaignStageExcel
    def StrategyMapBG(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CampaignStageExcel
    def CampaignStageRewardId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def MaxTurn(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def StageTopography_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def RecommandLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def BgmId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CampaignStageExcel
    def StrategyEnvironment_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def GroundId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def ContentType_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def BGMId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(48))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def FirstClearReportEventName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(50))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CampaignStageExcel
    def FirstClearFunnelMessage(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(52))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CampaignStageExcel
    def FirstClearEventMessage(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(54))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CampaignStageExcel
    def TacticRewardExp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(56))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def FixedEchelonId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(58))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(28)
def CampaignStageExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddId(builder, Id): builder.PrependInt64Slot(0, Id, 0)
def CampaignStageExcelAddId(builder, Id):
    """This method is deprecated. Please switch to AddId."""
    return AddId(builder, Id)
def AddName(builder, Name): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(Name), 0)
def CampaignStageExcelAddName(builder, Name):
    """This method is deprecated. Please switch to AddName."""
    return AddName(builder, Name)
def AddStageNumber(builder, StageNumber): builder.PrependInt32Slot(2, StageNumber, 0)
def CampaignStageExcelAddStageNumber(builder, StageNumber):
    """This method is deprecated. Please switch to AddStageNumber."""
    return AddStageNumber(builder, StageNumber)
def AddCleardScenarioId(builder, CleardScenarioId): builder.PrependInt64Slot(3, CleardScenarioId, 0)
def CampaignStageExcelAddCleardScenarioId(builder, CleardScenarioId):
    """This method is deprecated. Please switch to AddCleardScenarioId."""
    return AddCleardScenarioId(builder, CleardScenarioId)
def AddBattleDuration(builder, BattleDuration): builder.PrependInt64Slot(4, BattleDuration, 0)
def CampaignStageExcelAddBattleDuration(builder, BattleDuration):
    """This method is deprecated. Please switch to AddBattleDuration."""
    return AddBattleDuration(builder, BattleDuration)
def AddStageEnterCostType(builder, StageEnterCostType): builder.PrependInt32Slot(5, StageEnterCostType, 0)
def CampaignStageExcelAddStageEnterCostType(builder, StageEnterCostType):
    """This method is deprecated. Please switch to AddStageEnterCostType."""
    return AddStageEnterCostType(builder, StageEnterCostType)
def AddStageEnterCostAmount(builder, StageEnterCostAmount): builder.PrependInt32Slot(6, StageEnterCostAmount, 0)
def CampaignStageExcelAddStageEnterCostAmount(builder, StageEnterCostAmount):
    """This method is deprecated. Please switch to AddStageEnterCostAmount."""
    return AddStageEnterCostAmount(builder, StageEnterCostAmount)
def AddStageEnterEchelonCount(builder, StageEnterEchelonCount): builder.PrependInt32Slot(7, StageEnterEchelonCount, 0)
def CampaignStageExcelAddStageEnterEchelonCount(builder, StageEnterEchelonCount):
    """This method is deprecated. Please switch to AddStageEnterEchelonCount."""
    return AddStageEnterEchelonCount(builder, StageEnterEchelonCount)
def AddStarConditionTacticRankSCount(builder, StarConditionTacticRankSCount): builder.PrependInt64Slot(8, StarConditionTacticRankSCount, 0)
def CampaignStageExcelAddStarConditionTacticRankSCount(builder, StarConditionTacticRankSCount):
    """This method is deprecated. Please switch to AddStarConditionTacticRankSCount."""
    return AddStarConditionTacticRankSCount(builder, StarConditionTacticRankSCount)
def AddStarConditionTurnCount(builder, StarConditionTurnCount): builder.PrependInt64Slot(9, StarConditionTurnCount, 0)
def CampaignStageExcelAddStarConditionTurnCount(builder, StarConditionTurnCount):
    """This method is deprecated. Please switch to AddStarConditionTurnCount."""
    return AddStarConditionTurnCount(builder, StarConditionTurnCount)
def AddEnterScenarioGroupId(builder, EnterScenarioGroupId): builder.PrependUOffsetTRelativeSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(EnterScenarioGroupId), 0)
def CampaignStageExcelAddEnterScenarioGroupId(builder, EnterScenarioGroupId):
    """This method is deprecated. Please switch to AddEnterScenarioGroupId."""
    return AddEnterScenarioGroupId(builder, EnterScenarioGroupId)
def StartEnterScenarioGroupIdVector(builder, numElems): return builder.StartVector(8, numElems, 8)
def CampaignStageExcelStartEnterScenarioGroupIdVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartEnterScenarioGroupIdVector(builder, numElems)
def AddClearScenarioGroupId(builder, ClearScenarioGroupId): builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(ClearScenarioGroupId), 0)
def CampaignStageExcelAddClearScenarioGroupId(builder, ClearScenarioGroupId):
    """This method is deprecated. Please switch to AddClearScenarioGroupId."""
    return AddClearScenarioGroupId(builder, ClearScenarioGroupId)
def StartClearScenarioGroupIdVector(builder, numElems): return builder.StartVector(8, numElems, 8)
def CampaignStageExcelStartClearScenarioGroupIdVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartClearScenarioGroupIdVector(builder, numElems)
def AddStrategyMap(builder, StrategyMap): builder.PrependUOffsetTRelativeSlot(12, flatbuffers.number_types.UOffsetTFlags.py_type(StrategyMap), 0)
def CampaignStageExcelAddStrategyMap(builder, StrategyMap):
    """This method is deprecated. Please switch to AddStrategyMap."""
    return AddStrategyMap(builder, StrategyMap)
def AddStrategyMapBG(builder, StrategyMapBG): builder.PrependUOffsetTRelativeSlot(13, flatbuffers.number_types.UOffsetTFlags.py_type(StrategyMapBG), 0)
def CampaignStageExcelAddStrategyMapBG(builder, StrategyMapBG):
    """This method is deprecated. Please switch to AddStrategyMapBG."""
    return AddStrategyMapBG(builder, StrategyMapBG)
def AddCampaignStageRewardId(builder, CampaignStageRewardId): builder.PrependInt64Slot(14, CampaignStageRewardId, 0)
def CampaignStageExcelAddCampaignStageRewardId(builder, CampaignStageRewardId):
    """This method is deprecated. Please switch to AddCampaignStageRewardId."""
    return AddCampaignStageRewardId(builder, CampaignStageRewardId)
def AddMaxTurn(builder, MaxTurn): builder.PrependInt32Slot(15, MaxTurn, 0)
def CampaignStageExcelAddMaxTurn(builder, MaxTurn):
    """This method is deprecated. Please switch to AddMaxTurn."""
    return AddMaxTurn(builder, MaxTurn)
def AddStageTopography_(builder, StageTopography_): builder.PrependInt32Slot(16, StageTopography_, 0)
def CampaignStageExcelAddStageTopography_(builder, StageTopography_):
    """This method is deprecated. Please switch to AddStageTopography_."""
    return AddStageTopography_(builder, StageTopography_)
def AddRecommandLevel(builder, RecommandLevel): builder.PrependInt32Slot(17, RecommandLevel, 0)
def CampaignStageExcelAddRecommandLevel(builder, RecommandLevel):
    """This method is deprecated. Please switch to AddRecommandLevel."""
    return AddRecommandLevel(builder, RecommandLevel)
def AddBgmId(builder, BgmId): builder.PrependUOffsetTRelativeSlot(18, flatbuffers.number_types.UOffsetTFlags.py_type(BgmId), 0)
def CampaignStageExcelAddBgmId(builder, BgmId):
    """This method is deprecated. Please switch to AddBgmId."""
    return AddBgmId(builder, BgmId)
def AddStrategyEnvironment_(builder, StrategyEnvironment_): builder.PrependInt32Slot(19, StrategyEnvironment_, 0)
def CampaignStageExcelAddStrategyEnvironment_(builder, StrategyEnvironment_):
    """This method is deprecated. Please switch to AddStrategyEnvironment_."""
    return AddStrategyEnvironment_(builder, StrategyEnvironment_)
def AddGroundId(builder, GroundId): builder.PrependInt64Slot(20, GroundId, 0)
def CampaignStageExcelAddGroundId(builder, GroundId):
    """This method is deprecated. Please switch to AddGroundId."""
    return AddGroundId(builder, GroundId)
def AddContentType_(builder, ContentType_): builder.PrependInt32Slot(21, ContentType_, 0)
def CampaignStageExcelAddContentType_(builder, ContentType_):
    """This method is deprecated. Please switch to AddContentType_."""
    return AddContentType_(builder, ContentType_)
def AddBGMId(builder, BGMId): builder.PrependInt64Slot(22, BGMId, 0)
def CampaignStageExcelAddBGMId(builder, BGMId):
    """This method is deprecated. Please switch to AddBGMId."""
    return AddBGMId(builder, BGMId)
def AddFirstClearReportEventName(builder, FirstClearReportEventName): builder.PrependUOffsetTRelativeSlot(23, flatbuffers.number_types.UOffsetTFlags.py_type(FirstClearReportEventName), 0)
def CampaignStageExcelAddFirstClearReportEventName(builder, FirstClearReportEventName):
    """This method is deprecated. Please switch to AddFirstClearReportEventName."""
    return AddFirstClearReportEventName(builder, FirstClearReportEventName)
def AddFirstClearFunnelMessage(builder, FirstClearFunnelMessage): builder.PrependUOffsetTRelativeSlot(24, flatbuffers.number_types.UOffsetTFlags.py_type(FirstClearFunnelMessage), 0)
def CampaignStageExcelAddFirstClearFunnelMessage(builder, FirstClearFunnelMessage):
    """This method is deprecated. Please switch to AddFirstClearFunnelMessage."""
    return AddFirstClearFunnelMessage(builder, FirstClearFunnelMessage)
def AddFirstClearEventMessage(builder, FirstClearEventMessage): builder.PrependUOffsetTRelativeSlot(25, flatbuffers.number_types.UOffsetTFlags.py_type(FirstClearEventMessage), 0)
def CampaignStageExcelAddFirstClearEventMessage(builder, FirstClearEventMessage):
    """This method is deprecated. Please switch to AddFirstClearEventMessage."""
    return AddFirstClearEventMessage(builder, FirstClearEventMessage)
def AddTacticRewardExp(builder, TacticRewardExp): builder.PrependInt64Slot(26, TacticRewardExp, 0)
def CampaignStageExcelAddTacticRewardExp(builder, TacticRewardExp):
    """This method is deprecated. Please switch to AddTacticRewardExp."""
    return AddTacticRewardExp(builder, TacticRewardExp)
def AddFixedEchelonId(builder, FixedEchelonId): builder.PrependInt64Slot(27, FixedEchelonId, 0)
def CampaignStageExcelAddFixedEchelonId(builder, FixedEchelonId):
    """This method is deprecated. Please switch to AddFixedEchelonId."""
    return AddFixedEchelonId(builder, FixedEchelonId)
def End(builder): return builder.EndObject()
def CampaignStageExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)