# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class OpenConditionExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = OpenConditionExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsOpenConditionExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # OpenConditionExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # OpenConditionExcel
    def OpenConditionContentType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # OpenConditionExcel
    def LockUI(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # OpenConditionExcel
    def LockUILength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # OpenConditionExcel
    def LockUIIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

    # OpenConditionExcel
    def ShortcutPopupPriority(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # OpenConditionExcel
    def ShortcutUIName(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # OpenConditionExcel
    def ShortcutUINameLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # OpenConditionExcel
    def ShortcutUINameIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        return o == 0

    # OpenConditionExcel
    def ShortcutParam(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # OpenConditionExcel
    def Scene(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # OpenConditionExcel
    def HideWhenLocked(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # OpenConditionExcel
    def AccountLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # OpenConditionExcel
    def CampaignStageId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # OpenConditionExcel
    def MultipleConditionCheckType_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # OpenConditionExcel
    def OpenDayOfWeek(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # OpenConditionExcel
    def OpenHour(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # OpenConditionExcel
    def CloseDayOfWeek(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # OpenConditionExcel
    def CloseHour(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # OpenConditionExcel
    def CafeRank(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(15)
def OpenConditionExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddOpenConditionContentType(builder, OpenConditionContentType): builder.PrependInt32Slot(0, OpenConditionContentType, 0)
def OpenConditionExcelAddOpenConditionContentType(builder, OpenConditionContentType):
    """This method is deprecated. Please switch to AddOpenConditionContentType."""
    return AddOpenConditionContentType(builder, OpenConditionContentType)
def AddLockUI(builder, LockUI): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(LockUI), 0)
def OpenConditionExcelAddLockUI(builder, LockUI):
    """This method is deprecated. Please switch to AddLockUI."""
    return AddLockUI(builder, LockUI)
def StartLockUIVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def OpenConditionExcelStartLockUIVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartLockUIVector(builder, numElems)
def AddShortcutPopupPriority(builder, ShortcutPopupPriority): builder.PrependInt64Slot(2, ShortcutPopupPriority, 0)
def OpenConditionExcelAddShortcutPopupPriority(builder, ShortcutPopupPriority):
    """This method is deprecated. Please switch to AddShortcutPopupPriority."""
    return AddShortcutPopupPriority(builder, ShortcutPopupPriority)
def AddShortcutUIName(builder, ShortcutUIName): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(ShortcutUIName), 0)
def OpenConditionExcelAddShortcutUIName(builder, ShortcutUIName):
    """This method is deprecated. Please switch to AddShortcutUIName."""
    return AddShortcutUIName(builder, ShortcutUIName)
def StartShortcutUINameVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def OpenConditionExcelStartShortcutUINameVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartShortcutUINameVector(builder, numElems)
def AddShortcutParam(builder, ShortcutParam): builder.PrependInt32Slot(4, ShortcutParam, 0)
def OpenConditionExcelAddShortcutParam(builder, ShortcutParam):
    """This method is deprecated. Please switch to AddShortcutParam."""
    return AddShortcutParam(builder, ShortcutParam)
def AddScene(builder, Scene): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(Scene), 0)
def OpenConditionExcelAddScene(builder, Scene):
    """This method is deprecated. Please switch to AddScene."""
    return AddScene(builder, Scene)
def AddHideWhenLocked(builder, HideWhenLocked): builder.PrependBoolSlot(6, HideWhenLocked, 0)
def OpenConditionExcelAddHideWhenLocked(builder, HideWhenLocked):
    """This method is deprecated. Please switch to AddHideWhenLocked."""
    return AddHideWhenLocked(builder, HideWhenLocked)
def AddAccountLevel(builder, AccountLevel): builder.PrependInt64Slot(7, AccountLevel, 0)
def OpenConditionExcelAddAccountLevel(builder, AccountLevel):
    """This method is deprecated. Please switch to AddAccountLevel."""
    return AddAccountLevel(builder, AccountLevel)
def AddCampaignStageId(builder, CampaignStageId): builder.PrependInt64Slot(8, CampaignStageId, 0)
def OpenConditionExcelAddCampaignStageId(builder, CampaignStageId):
    """This method is deprecated. Please switch to AddCampaignStageId."""
    return AddCampaignStageId(builder, CampaignStageId)
def AddMultipleConditionCheckType_(builder, MultipleConditionCheckType_): builder.PrependInt32Slot(9, MultipleConditionCheckType_, 0)
def OpenConditionExcelAddMultipleConditionCheckType_(builder, MultipleConditionCheckType_):
    """This method is deprecated. Please switch to AddMultipleConditionCheckType_."""
    return AddMultipleConditionCheckType_(builder, MultipleConditionCheckType_)
def AddOpenDayOfWeek(builder, OpenDayOfWeek): builder.PrependInt32Slot(10, OpenDayOfWeek, 0)
def OpenConditionExcelAddOpenDayOfWeek(builder, OpenDayOfWeek):
    """This method is deprecated. Please switch to AddOpenDayOfWeek."""
    return AddOpenDayOfWeek(builder, OpenDayOfWeek)
def AddOpenHour(builder, OpenHour): builder.PrependInt64Slot(11, OpenHour, 0)
def OpenConditionExcelAddOpenHour(builder, OpenHour):
    """This method is deprecated. Please switch to AddOpenHour."""
    return AddOpenHour(builder, OpenHour)
def AddCloseDayOfWeek(builder, CloseDayOfWeek): builder.PrependInt32Slot(12, CloseDayOfWeek, 0)
def OpenConditionExcelAddCloseDayOfWeek(builder, CloseDayOfWeek):
    """This method is deprecated. Please switch to AddCloseDayOfWeek."""
    return AddCloseDayOfWeek(builder, CloseDayOfWeek)
def AddCloseHour(builder, CloseHour): builder.PrependInt64Slot(13, CloseHour, 0)
def OpenConditionExcelAddCloseHour(builder, CloseHour):
    """This method is deprecated. Please switch to AddCloseHour."""
    return AddCloseHour(builder, CloseHour)
def AddCafeRank(builder, CafeRank): builder.PrependInt64Slot(14, CafeRank, 0)
def OpenConditionExcelAddCafeRank(builder, CafeRank):
    """This method is deprecated. Please switch to AddCafeRank."""
    return AddCafeRank(builder, CafeRank)
def End(builder): return builder.EndObject()
def OpenConditionExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)