# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class CafeRankExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CafeRankExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsCafeRankExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # CafeRankExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # CafeRankExcel
    def Rank(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeRankExcel
    def RecipeId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeRankExcel
    def ComfortMax(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeRankExcel
    def ActionPointProductionCoefficient(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeRankExcel
    def ActionPointProductionCorrectionValue(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeRankExcel
    def ActionPointStorageMax(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeRankExcel
    def GoldProductionCoefficient(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeRankExcel
    def GoldProductionCorrectionValue(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeRankExcel
    def GoldStorageMax(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeRankExcel
    def TagCountMax(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeRankExcel
    def CharacterVisitMin(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CafeRankExcel
    def CharacterVisitMax(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(12)
def CafeRankExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddRank(builder, Rank): builder.PrependInt64Slot(0, Rank, 0)
def CafeRankExcelAddRank(builder, Rank):
    """This method is deprecated. Please switch to AddRank."""
    return AddRank(builder, Rank)
def AddRecipeId(builder, RecipeId): builder.PrependInt64Slot(1, RecipeId, 0)
def CafeRankExcelAddRecipeId(builder, RecipeId):
    """This method is deprecated. Please switch to AddRecipeId."""
    return AddRecipeId(builder, RecipeId)
def AddComfortMax(builder, ComfortMax): builder.PrependInt64Slot(2, ComfortMax, 0)
def CafeRankExcelAddComfortMax(builder, ComfortMax):
    """This method is deprecated. Please switch to AddComfortMax."""
    return AddComfortMax(builder, ComfortMax)
def AddActionPointProductionCoefficient(builder, ActionPointProductionCoefficient): builder.PrependInt64Slot(3, ActionPointProductionCoefficient, 0)
def CafeRankExcelAddActionPointProductionCoefficient(builder, ActionPointProductionCoefficient):
    """This method is deprecated. Please switch to AddActionPointProductionCoefficient."""
    return AddActionPointProductionCoefficient(builder, ActionPointProductionCoefficient)
def AddActionPointProductionCorrectionValue(builder, ActionPointProductionCorrectionValue): builder.PrependInt64Slot(4, ActionPointProductionCorrectionValue, 0)
def CafeRankExcelAddActionPointProductionCorrectionValue(builder, ActionPointProductionCorrectionValue):
    """This method is deprecated. Please switch to AddActionPointProductionCorrectionValue."""
    return AddActionPointProductionCorrectionValue(builder, ActionPointProductionCorrectionValue)
def AddActionPointStorageMax(builder, ActionPointStorageMax): builder.PrependInt64Slot(5, ActionPointStorageMax, 0)
def CafeRankExcelAddActionPointStorageMax(builder, ActionPointStorageMax):
    """This method is deprecated. Please switch to AddActionPointStorageMax."""
    return AddActionPointStorageMax(builder, ActionPointStorageMax)
def AddGoldProductionCoefficient(builder, GoldProductionCoefficient): builder.PrependInt64Slot(6, GoldProductionCoefficient, 0)
def CafeRankExcelAddGoldProductionCoefficient(builder, GoldProductionCoefficient):
    """This method is deprecated. Please switch to AddGoldProductionCoefficient."""
    return AddGoldProductionCoefficient(builder, GoldProductionCoefficient)
def AddGoldProductionCorrectionValue(builder, GoldProductionCorrectionValue): builder.PrependInt64Slot(7, GoldProductionCorrectionValue, 0)
def CafeRankExcelAddGoldProductionCorrectionValue(builder, GoldProductionCorrectionValue):
    """This method is deprecated. Please switch to AddGoldProductionCorrectionValue."""
    return AddGoldProductionCorrectionValue(builder, GoldProductionCorrectionValue)
def AddGoldStorageMax(builder, GoldStorageMax): builder.PrependInt64Slot(8, GoldStorageMax, 0)
def CafeRankExcelAddGoldStorageMax(builder, GoldStorageMax):
    """This method is deprecated. Please switch to AddGoldStorageMax."""
    return AddGoldStorageMax(builder, GoldStorageMax)
def AddTagCountMax(builder, TagCountMax): builder.PrependInt64Slot(9, TagCountMax, 0)
def CafeRankExcelAddTagCountMax(builder, TagCountMax):
    """This method is deprecated. Please switch to AddTagCountMax."""
    return AddTagCountMax(builder, TagCountMax)
def AddCharacterVisitMin(builder, CharacterVisitMin): builder.PrependInt32Slot(10, CharacterVisitMin, 0)
def CafeRankExcelAddCharacterVisitMin(builder, CharacterVisitMin):
    """This method is deprecated. Please switch to AddCharacterVisitMin."""
    return AddCharacterVisitMin(builder, CharacterVisitMin)
def AddCharacterVisitMax(builder, CharacterVisitMax): builder.PrependInt32Slot(11, CharacterVisitMax, 0)
def CafeRankExcelAddCharacterVisitMax(builder, CharacterVisitMax):
    """This method is deprecated. Please switch to AddCharacterVisitMax."""
    return AddCharacterVisitMax(builder, CharacterVisitMax)
def End(builder): return builder.EndObject()
def CafeRankExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)