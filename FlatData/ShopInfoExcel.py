# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ShopInfoExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ShopInfoExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsShopInfoExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ShopInfoExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ShopInfoExcel
    def CategoryType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ShopInfoExcel
    def IsRefresh(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # ShopInfoExcel
    def ParcelType_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ShopInfoExcel
    def ParcelId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ShopInfoExcel
    def AutoRefreshCoolTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ShopInfoExcel
    def RefreshAbleCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ShopInfoExcel
    def GoodsId(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int64Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 8))
        return 0

    # ShopInfoExcel
    def GoodsIdAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int64Flags, o)
        return 0

    # ShopInfoExcel
    def GoodsIdLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # ShopInfoExcel
    def GoodsIdIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        return o == 0

    # ShopInfoExcel
    def OpenPeriodFrom(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ShopInfoExcel
    def OpenPeriodTo(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def Start(builder): builder.StartObject(9)
def ShopInfoExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddCategoryType(builder, CategoryType): builder.PrependInt32Slot(0, CategoryType, 0)
def ShopInfoExcelAddCategoryType(builder, CategoryType):
    """This method is deprecated. Please switch to AddCategoryType."""
    return AddCategoryType(builder, CategoryType)
def AddIsRefresh(builder, IsRefresh): builder.PrependBoolSlot(1, IsRefresh, 0)
def ShopInfoExcelAddIsRefresh(builder, IsRefresh):
    """This method is deprecated. Please switch to AddIsRefresh."""
    return AddIsRefresh(builder, IsRefresh)
def AddParcelType_(builder, ParcelType_): builder.PrependInt32Slot(2, ParcelType_, 0)
def ShopInfoExcelAddParcelType_(builder, ParcelType_):
    """This method is deprecated. Please switch to AddParcelType_."""
    return AddParcelType_(builder, ParcelType_)
def AddParcelId(builder, ParcelId): builder.PrependInt64Slot(3, ParcelId, 0)
def ShopInfoExcelAddParcelId(builder, ParcelId):
    """This method is deprecated. Please switch to AddParcelId."""
    return AddParcelId(builder, ParcelId)
def AddAutoRefreshCoolTime(builder, AutoRefreshCoolTime): builder.PrependInt64Slot(4, AutoRefreshCoolTime, 0)
def ShopInfoExcelAddAutoRefreshCoolTime(builder, AutoRefreshCoolTime):
    """This method is deprecated. Please switch to AddAutoRefreshCoolTime."""
    return AddAutoRefreshCoolTime(builder, AutoRefreshCoolTime)
def AddRefreshAbleCount(builder, RefreshAbleCount): builder.PrependInt64Slot(5, RefreshAbleCount, 0)
def ShopInfoExcelAddRefreshAbleCount(builder, RefreshAbleCount):
    """This method is deprecated. Please switch to AddRefreshAbleCount."""
    return AddRefreshAbleCount(builder, RefreshAbleCount)
def AddGoodsId(builder, GoodsId): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(GoodsId), 0)
def ShopInfoExcelAddGoodsId(builder, GoodsId):
    """This method is deprecated. Please switch to AddGoodsId."""
    return AddGoodsId(builder, GoodsId)
def StartGoodsIdVector(builder, numElems): return builder.StartVector(8, numElems, 8)
def ShopInfoExcelStartGoodsIdVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartGoodsIdVector(builder, numElems)
def AddOpenPeriodFrom(builder, OpenPeriodFrom): builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(OpenPeriodFrom), 0)
def ShopInfoExcelAddOpenPeriodFrom(builder, OpenPeriodFrom):
    """This method is deprecated. Please switch to AddOpenPeriodFrom."""
    return AddOpenPeriodFrom(builder, OpenPeriodFrom)
def AddOpenPeriodTo(builder, OpenPeriodTo): builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(OpenPeriodTo), 0)
def ShopInfoExcelAddOpenPeriodTo(builder, OpenPeriodTo):
    """This method is deprecated. Please switch to AddOpenPeriodTo."""
    return AddOpenPeriodTo(builder, OpenPeriodTo)
def End(builder): return builder.EndObject()
def ShopInfoExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)