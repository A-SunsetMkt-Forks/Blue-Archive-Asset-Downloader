# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class AccountLevelExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = AccountLevelExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsAccountLevelExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # AccountLevelExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # AccountLevelExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # AccountLevelExcel
    def Level(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # AccountLevelExcel
    def Exp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # AccountLevelExcel
    def APAutoChargeMax(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(4)
def AccountLevelExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddId(builder, Id): builder.PrependInt64Slot(0, Id, 0)
def AccountLevelExcelAddId(builder, Id):
    """This method is deprecated. Please switch to AddId."""
    return AddId(builder, Id)
def AddLevel(builder, Level): builder.PrependInt64Slot(1, Level, 0)
def AccountLevelExcelAddLevel(builder, Level):
    """This method is deprecated. Please switch to AddLevel."""
    return AddLevel(builder, Level)
def AddExp(builder, Exp): builder.PrependInt64Slot(2, Exp, 0)
def AccountLevelExcelAddExp(builder, Exp):
    """This method is deprecated. Please switch to AddExp."""
    return AddExp(builder, Exp)
def AddAPAutoChargeMax(builder, APAutoChargeMax): builder.PrependInt64Slot(3, APAutoChargeMax, 0)
def AccountLevelExcelAddAPAutoChargeMax(builder, APAutoChargeMax):
    """This method is deprecated. Please switch to AddAPAutoChargeMax."""
    return AddAPAutoChargeMax(builder, APAutoChargeMax)
def End(builder): return builder.EndObject()
def AccountLevelExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)