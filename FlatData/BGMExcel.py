# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class BGMExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = BGMExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsBGMExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # BGMExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # BGMExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # BGMExcel
    def ProductionStep_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # BGMExcel
    def Path(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # BGMExcel
    def Volume(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # BGMExcel
    def LoopStartTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # BGMExcel
    def LoopEndTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # BGMExcel
    def LoopTranstionTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # BGMExcel
    def LoopOffsetTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

def Start(builder): builder.StartObject(8)
def BGMExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddId(builder, Id): builder.PrependInt64Slot(0, Id, 0)
def BGMExcelAddId(builder, Id):
    """This method is deprecated. Please switch to AddId."""
    return AddId(builder, Id)
def AddProductionStep_(builder, ProductionStep_): builder.PrependInt32Slot(1, ProductionStep_, 0)
def BGMExcelAddProductionStep_(builder, ProductionStep_):
    """This method is deprecated. Please switch to AddProductionStep_."""
    return AddProductionStep_(builder, ProductionStep_)
def AddPath(builder, Path): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(Path), 0)
def BGMExcelAddPath(builder, Path):
    """This method is deprecated. Please switch to AddPath."""
    return AddPath(builder, Path)
def AddVolume(builder, Volume): builder.PrependFloat32Slot(3, Volume, 0.0)
def BGMExcelAddVolume(builder, Volume):
    """This method is deprecated. Please switch to AddVolume."""
    return AddVolume(builder, Volume)
def AddLoopStartTime(builder, LoopStartTime): builder.PrependFloat32Slot(4, LoopStartTime, 0.0)
def BGMExcelAddLoopStartTime(builder, LoopStartTime):
    """This method is deprecated. Please switch to AddLoopStartTime."""
    return AddLoopStartTime(builder, LoopStartTime)
def AddLoopEndTime(builder, LoopEndTime): builder.PrependFloat32Slot(5, LoopEndTime, 0.0)
def BGMExcelAddLoopEndTime(builder, LoopEndTime):
    """This method is deprecated. Please switch to AddLoopEndTime."""
    return AddLoopEndTime(builder, LoopEndTime)
def AddLoopTranstionTime(builder, LoopTranstionTime): builder.PrependFloat32Slot(6, LoopTranstionTime, 0.0)
def BGMExcelAddLoopTranstionTime(builder, LoopTranstionTime):
    """This method is deprecated. Please switch to AddLoopTranstionTime."""
    return AddLoopTranstionTime(builder, LoopTranstionTime)
def AddLoopOffsetTime(builder, LoopOffsetTime): builder.PrependFloat32Slot(7, LoopOffsetTime, 0.0)
def BGMExcelAddLoopOffsetTime(builder, LoopOffsetTime):
    """This method is deprecated. Please switch to AddLoopOffsetTime."""
    return AddLoopOffsetTime(builder, LoopOffsetTime)
def End(builder): return builder.EndObject()
def BGMExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)