# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class GachaGroupExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = GachaGroupExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsGachaGroupExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # GachaGroupExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # GachaGroupExcel
    def ID(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GachaGroupExcel
    def NameKr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GachaGroupExcel
    def IsRecursive(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # GachaGroupExcel
    def GroupType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(4)
def GachaGroupExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddID(builder, ID): builder.PrependInt64Slot(0, ID, 0)
def GachaGroupExcelAddID(builder, ID):
    """This method is deprecated. Please switch to AddID."""
    return AddID(builder, ID)
def AddNameKr(builder, NameKr): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(NameKr), 0)
def GachaGroupExcelAddNameKr(builder, NameKr):
    """This method is deprecated. Please switch to AddNameKr."""
    return AddNameKr(builder, NameKr)
def AddIsRecursive(builder, IsRecursive): builder.PrependBoolSlot(2, IsRecursive, 0)
def GachaGroupExcelAddIsRecursive(builder, IsRecursive):
    """This method is deprecated. Please switch to AddIsRecursive."""
    return AddIsRecursive(builder, IsRecursive)
def AddGroupType(builder, GroupType): builder.PrependInt32Slot(3, GroupType, 0)
def GachaGroupExcelAddGroupType(builder, GroupType):
    """This method is deprecated. Please switch to AddGroupType."""
    return AddGroupType(builder, GroupType)
def End(builder): return builder.EndObject()
def GachaGroupExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)