# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class CharacterStatLimitExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CharacterStatLimitExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsCharacterStatLimitExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # CharacterStatLimitExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # CharacterStatLimitExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterStatLimitExcel
    def TacticEntityType_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CharacterStatLimitExcel
    def StatType_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CharacterStatLimitExcel
    def StatMinValue(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterStatLimitExcel
    def StatMaxValue(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterStatLimitExcel
    def StatRatioMinValue(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterStatLimitExcel
    def StatRatioMaxValue(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(7)
def CharacterStatLimitExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddId(builder, Id): builder.PrependInt64Slot(0, Id, 0)
def CharacterStatLimitExcelAddId(builder, Id):
    """This method is deprecated. Please switch to AddId."""
    return AddId(builder, Id)
def AddTacticEntityType_(builder, TacticEntityType_): builder.PrependInt32Slot(1, TacticEntityType_, 0)
def CharacterStatLimitExcelAddTacticEntityType_(builder, TacticEntityType_):
    """This method is deprecated. Please switch to AddTacticEntityType_."""
    return AddTacticEntityType_(builder, TacticEntityType_)
def AddStatType_(builder, StatType_): builder.PrependInt32Slot(2, StatType_, 0)
def CharacterStatLimitExcelAddStatType_(builder, StatType_):
    """This method is deprecated. Please switch to AddStatType_."""
    return AddStatType_(builder, StatType_)
def AddStatMinValue(builder, StatMinValue): builder.PrependInt64Slot(3, StatMinValue, 0)
def CharacterStatLimitExcelAddStatMinValue(builder, StatMinValue):
    """This method is deprecated. Please switch to AddStatMinValue."""
    return AddStatMinValue(builder, StatMinValue)
def AddStatMaxValue(builder, StatMaxValue): builder.PrependInt64Slot(4, StatMaxValue, 0)
def CharacterStatLimitExcelAddStatMaxValue(builder, StatMaxValue):
    """This method is deprecated. Please switch to AddStatMaxValue."""
    return AddStatMaxValue(builder, StatMaxValue)
def AddStatRatioMinValue(builder, StatRatioMinValue): builder.PrependInt64Slot(5, StatRatioMinValue, 0)
def CharacterStatLimitExcelAddStatRatioMinValue(builder, StatRatioMinValue):
    """This method is deprecated. Please switch to AddStatRatioMinValue."""
    return AddStatRatioMinValue(builder, StatRatioMinValue)
def AddStatRatioMaxValue(builder, StatRatioMaxValue): builder.PrependInt64Slot(6, StatRatioMaxValue, 0)
def CharacterStatLimitExcelAddStatRatioMaxValue(builder, StatRatioMaxValue):
    """This method is deprecated. Please switch to AddStatRatioMaxValue."""
    return AddStatRatioMaxValue(builder, StatRatioMaxValue)
def End(builder): return builder.EndObject()
def CharacterStatLimitExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)