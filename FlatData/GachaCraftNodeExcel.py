# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class GachaCraftNodeExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = GachaCraftNodeExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsGachaCraftNodeExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # GachaCraftNodeExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # GachaCraftNodeExcel
    def ID(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def Tier(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def Tag_(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # GachaCraftNodeExcel
    def Tag_AsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # GachaCraftNodeExcel
    def Tag_Length(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # GachaCraftNodeExcel
    def Tag_IsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        return o == 0

    # GachaCraftNodeExcel
    def NodeQuality(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def Lv1Exp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def Lv2Exp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def Icon(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GachaCraftNodeExcel
    def LocalizeKey(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def Lv1Property(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def Lv2Property(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP100(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP101(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP102(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP103(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP120(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP121(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP122(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP123(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP140(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP141(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP142(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP143(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP130(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(48))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP131(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(50))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP132(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(52))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP133(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(54))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP112(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(56))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP151(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(58))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP152(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(60))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP153(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(62))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP2100(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(64))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP2101(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(66))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP2102(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(68))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP2103(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(70))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP2000(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(72))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP2001(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(74))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP2002(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(76))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP2003(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(78))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP2004(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(80))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP2005(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(82))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP2006(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(84))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP2007(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(86))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP2008(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(88))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP2009(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(90))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP1100(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(92))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP1101(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(94))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP1102(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(96))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP1103(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(98))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP1104(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(100))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP1105(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(102))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP1106(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(104))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP1107(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(106))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP1108(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(108))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP1109(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(110))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP1110(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(112))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP1111(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(114))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP1112(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(116))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP1000(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(118))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP1001(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(120))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP1002(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(122))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP1003(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(124))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP1004(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(126))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP1005(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(128))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP1007(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(130))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeExcel
    def GP1008(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(132))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(65)
def GachaCraftNodeExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddID(builder, ID): builder.PrependInt64Slot(0, ID, 0)
def GachaCraftNodeExcelAddID(builder, ID):
    """This method is deprecated. Please switch to AddID."""
    return AddID(builder, ID)
def AddTier(builder, Tier): builder.PrependInt64Slot(1, Tier, 0)
def GachaCraftNodeExcelAddTier(builder, Tier):
    """This method is deprecated. Please switch to AddTier."""
    return AddTier(builder, Tier)
def AddTag_(builder, Tag_): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(Tag_), 0)
def GachaCraftNodeExcelAddTag_(builder, Tag_):
    """This method is deprecated. Please switch to AddTag_."""
    return AddTag_(builder, Tag_)
def StartTag_Vector(builder, numElems): return builder.StartVector(4, numElems, 4)
def GachaCraftNodeExcelStartTag_Vector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartTag_Vector(builder, numElems)
def AddNodeQuality(builder, NodeQuality): builder.PrependInt64Slot(3, NodeQuality, 0)
def GachaCraftNodeExcelAddNodeQuality(builder, NodeQuality):
    """This method is deprecated. Please switch to AddNodeQuality."""
    return AddNodeQuality(builder, NodeQuality)
def AddLv1Exp(builder, Lv1Exp): builder.PrependInt64Slot(4, Lv1Exp, 0)
def GachaCraftNodeExcelAddLv1Exp(builder, Lv1Exp):
    """This method is deprecated. Please switch to AddLv1Exp."""
    return AddLv1Exp(builder, Lv1Exp)
def AddLv2Exp(builder, Lv2Exp): builder.PrependInt64Slot(5, Lv2Exp, 0)
def GachaCraftNodeExcelAddLv2Exp(builder, Lv2Exp):
    """This method is deprecated. Please switch to AddLv2Exp."""
    return AddLv2Exp(builder, Lv2Exp)
def AddIcon(builder, Icon): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(Icon), 0)
def GachaCraftNodeExcelAddIcon(builder, Icon):
    """This method is deprecated. Please switch to AddIcon."""
    return AddIcon(builder, Icon)
def AddLocalizeKey(builder, LocalizeKey): builder.PrependUint32Slot(7, LocalizeKey, 0)
def GachaCraftNodeExcelAddLocalizeKey(builder, LocalizeKey):
    """This method is deprecated. Please switch to AddLocalizeKey."""
    return AddLocalizeKey(builder, LocalizeKey)
def AddLv1Property(builder, Lv1Property): builder.PrependInt64Slot(8, Lv1Property, 0)
def GachaCraftNodeExcelAddLv1Property(builder, Lv1Property):
    """This method is deprecated. Please switch to AddLv1Property."""
    return AddLv1Property(builder, Lv1Property)
def AddLv2Property(builder, Lv2Property): builder.PrependInt64Slot(9, Lv2Property, 0)
def GachaCraftNodeExcelAddLv2Property(builder, Lv2Property):
    """This method is deprecated. Please switch to AddLv2Property."""
    return AddLv2Property(builder, Lv2Property)
def AddGP100(builder, GP100): builder.PrependInt32Slot(10, GP100, 0)
def GachaCraftNodeExcelAddGP100(builder, GP100):
    """This method is deprecated. Please switch to AddGP100."""
    return AddGP100(builder, GP100)
def AddGP101(builder, GP101): builder.PrependInt32Slot(11, GP101, 0)
def GachaCraftNodeExcelAddGP101(builder, GP101):
    """This method is deprecated. Please switch to AddGP101."""
    return AddGP101(builder, GP101)
def AddGP102(builder, GP102): builder.PrependInt32Slot(12, GP102, 0)
def GachaCraftNodeExcelAddGP102(builder, GP102):
    """This method is deprecated. Please switch to AddGP102."""
    return AddGP102(builder, GP102)
def AddGP103(builder, GP103): builder.PrependInt32Slot(13, GP103, 0)
def GachaCraftNodeExcelAddGP103(builder, GP103):
    """This method is deprecated. Please switch to AddGP103."""
    return AddGP103(builder, GP103)
def AddGP120(builder, GP120): builder.PrependInt32Slot(14, GP120, 0)
def GachaCraftNodeExcelAddGP120(builder, GP120):
    """This method is deprecated. Please switch to AddGP120."""
    return AddGP120(builder, GP120)
def AddGP121(builder, GP121): builder.PrependInt32Slot(15, GP121, 0)
def GachaCraftNodeExcelAddGP121(builder, GP121):
    """This method is deprecated. Please switch to AddGP121."""
    return AddGP121(builder, GP121)
def AddGP122(builder, GP122): builder.PrependInt32Slot(16, GP122, 0)
def GachaCraftNodeExcelAddGP122(builder, GP122):
    """This method is deprecated. Please switch to AddGP122."""
    return AddGP122(builder, GP122)
def AddGP123(builder, GP123): builder.PrependInt32Slot(17, GP123, 0)
def GachaCraftNodeExcelAddGP123(builder, GP123):
    """This method is deprecated. Please switch to AddGP123."""
    return AddGP123(builder, GP123)
def AddGP140(builder, GP140): builder.PrependInt32Slot(18, GP140, 0)
def GachaCraftNodeExcelAddGP140(builder, GP140):
    """This method is deprecated. Please switch to AddGP140."""
    return AddGP140(builder, GP140)
def AddGP141(builder, GP141): builder.PrependInt32Slot(19, GP141, 0)
def GachaCraftNodeExcelAddGP141(builder, GP141):
    """This method is deprecated. Please switch to AddGP141."""
    return AddGP141(builder, GP141)
def AddGP142(builder, GP142): builder.PrependInt32Slot(20, GP142, 0)
def GachaCraftNodeExcelAddGP142(builder, GP142):
    """This method is deprecated. Please switch to AddGP142."""
    return AddGP142(builder, GP142)
def AddGP143(builder, GP143): builder.PrependInt32Slot(21, GP143, 0)
def GachaCraftNodeExcelAddGP143(builder, GP143):
    """This method is deprecated. Please switch to AddGP143."""
    return AddGP143(builder, GP143)
def AddGP130(builder, GP130): builder.PrependInt32Slot(22, GP130, 0)
def GachaCraftNodeExcelAddGP130(builder, GP130):
    """This method is deprecated. Please switch to AddGP130."""
    return AddGP130(builder, GP130)
def AddGP131(builder, GP131): builder.PrependInt32Slot(23, GP131, 0)
def GachaCraftNodeExcelAddGP131(builder, GP131):
    """This method is deprecated. Please switch to AddGP131."""
    return AddGP131(builder, GP131)
def AddGP132(builder, GP132): builder.PrependInt32Slot(24, GP132, 0)
def GachaCraftNodeExcelAddGP132(builder, GP132):
    """This method is deprecated. Please switch to AddGP132."""
    return AddGP132(builder, GP132)
def AddGP133(builder, GP133): builder.PrependInt32Slot(25, GP133, 0)
def GachaCraftNodeExcelAddGP133(builder, GP133):
    """This method is deprecated. Please switch to AddGP133."""
    return AddGP133(builder, GP133)
def AddGP112(builder, GP112): builder.PrependInt32Slot(26, GP112, 0)
def GachaCraftNodeExcelAddGP112(builder, GP112):
    """This method is deprecated. Please switch to AddGP112."""
    return AddGP112(builder, GP112)
def AddGP151(builder, GP151): builder.PrependInt32Slot(27, GP151, 0)
def GachaCraftNodeExcelAddGP151(builder, GP151):
    """This method is deprecated. Please switch to AddGP151."""
    return AddGP151(builder, GP151)
def AddGP152(builder, GP152): builder.PrependInt32Slot(28, GP152, 0)
def GachaCraftNodeExcelAddGP152(builder, GP152):
    """This method is deprecated. Please switch to AddGP152."""
    return AddGP152(builder, GP152)
def AddGP153(builder, GP153): builder.PrependInt32Slot(29, GP153, 0)
def GachaCraftNodeExcelAddGP153(builder, GP153):
    """This method is deprecated. Please switch to AddGP153."""
    return AddGP153(builder, GP153)
def AddGP2100(builder, GP2100): builder.PrependInt32Slot(30, GP2100, 0)
def GachaCraftNodeExcelAddGP2100(builder, GP2100):
    """This method is deprecated. Please switch to AddGP2100."""
    return AddGP2100(builder, GP2100)
def AddGP2101(builder, GP2101): builder.PrependInt32Slot(31, GP2101, 0)
def GachaCraftNodeExcelAddGP2101(builder, GP2101):
    """This method is deprecated. Please switch to AddGP2101."""
    return AddGP2101(builder, GP2101)
def AddGP2102(builder, GP2102): builder.PrependInt32Slot(32, GP2102, 0)
def GachaCraftNodeExcelAddGP2102(builder, GP2102):
    """This method is deprecated. Please switch to AddGP2102."""
    return AddGP2102(builder, GP2102)
def AddGP2103(builder, GP2103): builder.PrependInt32Slot(33, GP2103, 0)
def GachaCraftNodeExcelAddGP2103(builder, GP2103):
    """This method is deprecated. Please switch to AddGP2103."""
    return AddGP2103(builder, GP2103)
def AddGP2000(builder, GP2000): builder.PrependInt32Slot(34, GP2000, 0)
def GachaCraftNodeExcelAddGP2000(builder, GP2000):
    """This method is deprecated. Please switch to AddGP2000."""
    return AddGP2000(builder, GP2000)
def AddGP2001(builder, GP2001): builder.PrependInt32Slot(35, GP2001, 0)
def GachaCraftNodeExcelAddGP2001(builder, GP2001):
    """This method is deprecated. Please switch to AddGP2001."""
    return AddGP2001(builder, GP2001)
def AddGP2002(builder, GP2002): builder.PrependInt32Slot(36, GP2002, 0)
def GachaCraftNodeExcelAddGP2002(builder, GP2002):
    """This method is deprecated. Please switch to AddGP2002."""
    return AddGP2002(builder, GP2002)
def AddGP2003(builder, GP2003): builder.PrependInt32Slot(37, GP2003, 0)
def GachaCraftNodeExcelAddGP2003(builder, GP2003):
    """This method is deprecated. Please switch to AddGP2003."""
    return AddGP2003(builder, GP2003)
def AddGP2004(builder, GP2004): builder.PrependInt32Slot(38, GP2004, 0)
def GachaCraftNodeExcelAddGP2004(builder, GP2004):
    """This method is deprecated. Please switch to AddGP2004."""
    return AddGP2004(builder, GP2004)
def AddGP2005(builder, GP2005): builder.PrependInt32Slot(39, GP2005, 0)
def GachaCraftNodeExcelAddGP2005(builder, GP2005):
    """This method is deprecated. Please switch to AddGP2005."""
    return AddGP2005(builder, GP2005)
def AddGP2006(builder, GP2006): builder.PrependInt32Slot(40, GP2006, 0)
def GachaCraftNodeExcelAddGP2006(builder, GP2006):
    """This method is deprecated. Please switch to AddGP2006."""
    return AddGP2006(builder, GP2006)
def AddGP2007(builder, GP2007): builder.PrependInt32Slot(41, GP2007, 0)
def GachaCraftNodeExcelAddGP2007(builder, GP2007):
    """This method is deprecated. Please switch to AddGP2007."""
    return AddGP2007(builder, GP2007)
def AddGP2008(builder, GP2008): builder.PrependInt32Slot(42, GP2008, 0)
def GachaCraftNodeExcelAddGP2008(builder, GP2008):
    """This method is deprecated. Please switch to AddGP2008."""
    return AddGP2008(builder, GP2008)
def AddGP2009(builder, GP2009): builder.PrependInt32Slot(43, GP2009, 0)
def GachaCraftNodeExcelAddGP2009(builder, GP2009):
    """This method is deprecated. Please switch to AddGP2009."""
    return AddGP2009(builder, GP2009)
def AddGP1100(builder, GP1100): builder.PrependInt32Slot(44, GP1100, 0)
def GachaCraftNodeExcelAddGP1100(builder, GP1100):
    """This method is deprecated. Please switch to AddGP1100."""
    return AddGP1100(builder, GP1100)
def AddGP1101(builder, GP1101): builder.PrependInt32Slot(45, GP1101, 0)
def GachaCraftNodeExcelAddGP1101(builder, GP1101):
    """This method is deprecated. Please switch to AddGP1101."""
    return AddGP1101(builder, GP1101)
def AddGP1102(builder, GP1102): builder.PrependInt32Slot(46, GP1102, 0)
def GachaCraftNodeExcelAddGP1102(builder, GP1102):
    """This method is deprecated. Please switch to AddGP1102."""
    return AddGP1102(builder, GP1102)
def AddGP1103(builder, GP1103): builder.PrependInt32Slot(47, GP1103, 0)
def GachaCraftNodeExcelAddGP1103(builder, GP1103):
    """This method is deprecated. Please switch to AddGP1103."""
    return AddGP1103(builder, GP1103)
def AddGP1104(builder, GP1104): builder.PrependInt32Slot(48, GP1104, 0)
def GachaCraftNodeExcelAddGP1104(builder, GP1104):
    """This method is deprecated. Please switch to AddGP1104."""
    return AddGP1104(builder, GP1104)
def AddGP1105(builder, GP1105): builder.PrependInt32Slot(49, GP1105, 0)
def GachaCraftNodeExcelAddGP1105(builder, GP1105):
    """This method is deprecated. Please switch to AddGP1105."""
    return AddGP1105(builder, GP1105)
def AddGP1106(builder, GP1106): builder.PrependInt32Slot(50, GP1106, 0)
def GachaCraftNodeExcelAddGP1106(builder, GP1106):
    """This method is deprecated. Please switch to AddGP1106."""
    return AddGP1106(builder, GP1106)
def AddGP1107(builder, GP1107): builder.PrependInt32Slot(51, GP1107, 0)
def GachaCraftNodeExcelAddGP1107(builder, GP1107):
    """This method is deprecated. Please switch to AddGP1107."""
    return AddGP1107(builder, GP1107)
def AddGP1108(builder, GP1108): builder.PrependInt32Slot(52, GP1108, 0)
def GachaCraftNodeExcelAddGP1108(builder, GP1108):
    """This method is deprecated. Please switch to AddGP1108."""
    return AddGP1108(builder, GP1108)
def AddGP1109(builder, GP1109): builder.PrependInt32Slot(53, GP1109, 0)
def GachaCraftNodeExcelAddGP1109(builder, GP1109):
    """This method is deprecated. Please switch to AddGP1109."""
    return AddGP1109(builder, GP1109)
def AddGP1110(builder, GP1110): builder.PrependInt32Slot(54, GP1110, 0)
def GachaCraftNodeExcelAddGP1110(builder, GP1110):
    """This method is deprecated. Please switch to AddGP1110."""
    return AddGP1110(builder, GP1110)
def AddGP1111(builder, GP1111): builder.PrependInt32Slot(55, GP1111, 0)
def GachaCraftNodeExcelAddGP1111(builder, GP1111):
    """This method is deprecated. Please switch to AddGP1111."""
    return AddGP1111(builder, GP1111)
def AddGP1112(builder, GP1112): builder.PrependInt32Slot(56, GP1112, 0)
def GachaCraftNodeExcelAddGP1112(builder, GP1112):
    """This method is deprecated. Please switch to AddGP1112."""
    return AddGP1112(builder, GP1112)
def AddGP1000(builder, GP1000): builder.PrependInt32Slot(57, GP1000, 0)
def GachaCraftNodeExcelAddGP1000(builder, GP1000):
    """This method is deprecated. Please switch to AddGP1000."""
    return AddGP1000(builder, GP1000)
def AddGP1001(builder, GP1001): builder.PrependInt32Slot(58, GP1001, 0)
def GachaCraftNodeExcelAddGP1001(builder, GP1001):
    """This method is deprecated. Please switch to AddGP1001."""
    return AddGP1001(builder, GP1001)
def AddGP1002(builder, GP1002): builder.PrependInt32Slot(59, GP1002, 0)
def GachaCraftNodeExcelAddGP1002(builder, GP1002):
    """This method is deprecated. Please switch to AddGP1002."""
    return AddGP1002(builder, GP1002)
def AddGP1003(builder, GP1003): builder.PrependInt32Slot(60, GP1003, 0)
def GachaCraftNodeExcelAddGP1003(builder, GP1003):
    """This method is deprecated. Please switch to AddGP1003."""
    return AddGP1003(builder, GP1003)
def AddGP1004(builder, GP1004): builder.PrependInt32Slot(61, GP1004, 0)
def GachaCraftNodeExcelAddGP1004(builder, GP1004):
    """This method is deprecated. Please switch to AddGP1004."""
    return AddGP1004(builder, GP1004)
def AddGP1005(builder, GP1005): builder.PrependInt32Slot(62, GP1005, 0)
def GachaCraftNodeExcelAddGP1005(builder, GP1005):
    """This method is deprecated. Please switch to AddGP1005."""
    return AddGP1005(builder, GP1005)
def AddGP1007(builder, GP1007): builder.PrependInt32Slot(63, GP1007, 0)
def GachaCraftNodeExcelAddGP1007(builder, GP1007):
    """This method is deprecated. Please switch to AddGP1007."""
    return AddGP1007(builder, GP1007)
def AddGP1008(builder, GP1008): builder.PrependInt32Slot(64, GP1008, 0)
def GachaCraftNodeExcelAddGP1008(builder, GP1008):
    """This method is deprecated. Please switch to AddGP1008."""
    return AddGP1008(builder, GP1008)
def End(builder): return builder.EndObject()
def GachaCraftNodeExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)