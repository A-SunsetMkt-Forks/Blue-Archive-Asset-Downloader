# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ConstCommonExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ConstCommonExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsConstCommonExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ConstCommonExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ConstCommonExcel
    def CampaignMainStageMaxRank(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CampaignMainStageBestRecord(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def HardAdventurePlayCountRecoverDailyNumber(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def HardStageCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def EventContentHardStageCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def TacticRankClearTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def BaseTimeScale(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def GachaPercentage(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def AcademyFavorZoneId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CafePresetSlotCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CafeMonologueIntervalMillisec(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CafeMonologueDefaultDuration(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CafeBubbleIdleDurationMilliSec(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FindGiftTimeLimit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CafeVisitProbabilityBase(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CafeVisitProbabilityTagBonus(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CafeAutoChargePeriodInMsc(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CafeProductionDecimalPosition(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CafeSetGroupApplyCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def WeekDungeonFindGiftRewardLimitCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def StageFailedCurrencyRefundRate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def EnterDeposit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def AccountMaxLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(48))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def MainSquadExpBonus(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(50))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def SupportSquadExpBonus(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(52))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def AccountExpRatio(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(54))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def MissionToastLifeTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(56))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ExpItemInsertLimit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(58))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ExpItemInsertAccelTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(60))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CharacterLvUpCoefficient(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(62))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def EquipmentLvUpCoefficient(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(64))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ExpEquipInsertLimit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(66))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def EquipLvUpCoefficient(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(68))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def NicknameLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(70))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CraftDuration(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(72))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # ConstCommonExcel
    def CraftDurationAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(72))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # ConstCommonExcel
    def CraftDurationLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(72))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # ConstCommonExcel
    def CraftDurationIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(72))
        return o == 0

    # ConstCommonExcel
    def CraftLimitTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(74))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CraftTicketItemUniqueId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(76))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CraftTicketConsumeAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(78))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def AcademyTicketCost(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(80))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def MassangerMessageExpireDay(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(82))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CraftLeafNodeGenerateLv1Count(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(84))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CraftLeafNodeGenerateLv2Count(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(86))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def TutorialGachaShopId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(88))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def TutorialGachaGoodsId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(90))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def EquipmentSlotOpenLevel(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(92))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # ConstCommonExcel
    def EquipmentSlotOpenLevelAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(92))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # ConstCommonExcel
    def EquipmentSlotOpenLevelLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(92))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # ConstCommonExcel
    def EquipmentSlotOpenLevelIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(92))
        return o == 0

    # ConstCommonExcel
    def ScenarioAutoDelayMillisec(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(94))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # ConstCommonExcel
    def JoinOrCreateClanCoolTimeFromHour(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(96))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ClanMaxMember(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(98))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ClanSearchResultCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(100))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ClanMaxApplicant(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(102))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ClanRejoinCoolTimeFromSecond(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(104))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ClanWordBalloonMaxCharacter(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(106))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CallNameRenameCoolTimeFromHour(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(108))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CallNameMinimumLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(110))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CallNameMaximumLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(112))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def LobbyToScreenModeWaitTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(114))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ScreenshotToLobbyButtonHideDelay(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(116))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def PrologueScenarioID01(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(118))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def PrologueScenarioID02(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(120))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def TutorialHardStage11(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(122))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def TutorialSpeedButtonStage(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(124))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def TutorialCharacterDefaultCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(126))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def TutorialShopCategoryType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(128))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def AdventureStrategyPlayTimeLimitInSeconds(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(130))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def EventStrategyPlayTimeLimitInSeconds(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(132))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def WeekDungoenTacticPlayTimeLimitInSeconds(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(134))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def RaidTacticPlayTimeLimitInSeconds(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(136))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def RaidOpponentListAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(138))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CraftBaseGoldRequired(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(140))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int64Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 8))
        return 0

    # ConstCommonExcel
    def CraftBaseGoldRequiredAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(140))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int64Flags, o)
        return 0

    # ConstCommonExcel
    def CraftBaseGoldRequiredLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(140))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # ConstCommonExcel
    def CraftBaseGoldRequiredIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(140))
        return o == 0

    # ConstCommonExcel
    def PostExpiredDayAttendance(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(142))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def PostExpiredDayInventoryOverflow(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(144))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def PostExpiredDayGameManager(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(146))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def UILabelCharacterWrap(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(148))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ConstCommonExcel
    def RequestTimeOut(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(150))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # ConstCommonExcel
    def MailStorageSoftCap(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(152))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def MailStorageHardCap(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(154))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ClearDeckStorageSize(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(156))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ClearDeckNoStarViewCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(158))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ClearDeck1StarViewCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(160))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ClearDeck2StarViewCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(162))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ClearDeck3StarViewCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(164))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ExSkillLevelMax(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(166))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def PublicSkillLevelMax(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(168))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def PassiveSkillLevelMax(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(170))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ExtraPassiveSkillLevelMax(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(172))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def AccountCommentMaxLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(174))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FormationCollider01OffsetX(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(176))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FormationCollider01OffsetY(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(178))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FormationCollider01OffsetZ(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(180))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FormationCollider01SizeX(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(182))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FormationCollider01SizeY(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(184))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FormationCollider01SizeZ(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(186))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FormationCollider02OffsetX(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(188))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FormationCollider02OffsetY(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(190))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FormationCollider02OffsetZ(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(192))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FormationCollider02SizeX(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(194))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FormationCollider02SizeY(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(196))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FormationCollider02SizeZ(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(198))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FormationCollider03OffsetX(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(200))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FormationCollider03OffsetY(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(202))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FormationCollider03OffsetZ(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(204))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FormationCollider03SizeX(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(206))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FormationCollider03SizeY(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(208))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def FormationCollider03SizeZ(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(210))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ShowFurnitureTag(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(212))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # ConstCommonExcel
    def CafeSummonCoolTimeFromHour(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(214))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def LimitedStageDailyClearCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(216))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def LimitedStageEntryTimeLimit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(218))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def LimitedStageEntryTimeBuffer(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(220))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def LimitedStagePointAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(222))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def LimitedStagePointPerApMin(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(224))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def LimitedStagePointPerApMax(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(226))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def AccountLinkReward(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(228))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def MonthlyProductCheckDays(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(230))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def WeaponLvUpCoefficient(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(232))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ShowRaidMyListCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(234))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def MaxLevelExpMasterCoinRatio(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(236))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def MasterCoinItemId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(238))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CallnameLengthEn(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(240))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def CallnameLengthKr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(242))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def NicknameLengthKr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(244))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConstCommonExcel
    def ClanNameLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(246))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(122)
def ConstCommonExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddCampaignMainStageMaxRank(builder, CampaignMainStageMaxRank): builder.PrependInt32Slot(0, CampaignMainStageMaxRank, 0)
def ConstCommonExcelAddCampaignMainStageMaxRank(builder, CampaignMainStageMaxRank):
    """This method is deprecated. Please switch to AddCampaignMainStageMaxRank."""
    return AddCampaignMainStageMaxRank(builder, CampaignMainStageMaxRank)
def AddCampaignMainStageBestRecord(builder, CampaignMainStageBestRecord): builder.PrependInt32Slot(1, CampaignMainStageBestRecord, 0)
def ConstCommonExcelAddCampaignMainStageBestRecord(builder, CampaignMainStageBestRecord):
    """This method is deprecated. Please switch to AddCampaignMainStageBestRecord."""
    return AddCampaignMainStageBestRecord(builder, CampaignMainStageBestRecord)
def AddHardAdventurePlayCountRecoverDailyNumber(builder, HardAdventurePlayCountRecoverDailyNumber): builder.PrependInt32Slot(2, HardAdventurePlayCountRecoverDailyNumber, 0)
def ConstCommonExcelAddHardAdventurePlayCountRecoverDailyNumber(builder, HardAdventurePlayCountRecoverDailyNumber):
    """This method is deprecated. Please switch to AddHardAdventurePlayCountRecoverDailyNumber."""
    return AddHardAdventurePlayCountRecoverDailyNumber(builder, HardAdventurePlayCountRecoverDailyNumber)
def AddHardStageCount(builder, HardStageCount): builder.PrependInt32Slot(3, HardStageCount, 0)
def ConstCommonExcelAddHardStageCount(builder, HardStageCount):
    """This method is deprecated. Please switch to AddHardStageCount."""
    return AddHardStageCount(builder, HardStageCount)
def AddEventContentHardStageCount(builder, EventContentHardStageCount): builder.PrependInt32Slot(4, EventContentHardStageCount, 0)
def ConstCommonExcelAddEventContentHardStageCount(builder, EventContentHardStageCount):
    """This method is deprecated. Please switch to AddEventContentHardStageCount."""
    return AddEventContentHardStageCount(builder, EventContentHardStageCount)
def AddTacticRankClearTime(builder, TacticRankClearTime): builder.PrependInt32Slot(5, TacticRankClearTime, 0)
def ConstCommonExcelAddTacticRankClearTime(builder, TacticRankClearTime):
    """This method is deprecated. Please switch to AddTacticRankClearTime."""
    return AddTacticRankClearTime(builder, TacticRankClearTime)
def AddBaseTimeScale(builder, BaseTimeScale): builder.PrependInt64Slot(6, BaseTimeScale, 0)
def ConstCommonExcelAddBaseTimeScale(builder, BaseTimeScale):
    """This method is deprecated. Please switch to AddBaseTimeScale."""
    return AddBaseTimeScale(builder, BaseTimeScale)
def AddGachaPercentage(builder, GachaPercentage): builder.PrependInt32Slot(7, GachaPercentage, 0)
def ConstCommonExcelAddGachaPercentage(builder, GachaPercentage):
    """This method is deprecated. Please switch to AddGachaPercentage."""
    return AddGachaPercentage(builder, GachaPercentage)
def AddAcademyFavorZoneId(builder, AcademyFavorZoneId): builder.PrependInt64Slot(8, AcademyFavorZoneId, 0)
def ConstCommonExcelAddAcademyFavorZoneId(builder, AcademyFavorZoneId):
    """This method is deprecated. Please switch to AddAcademyFavorZoneId."""
    return AddAcademyFavorZoneId(builder, AcademyFavorZoneId)
def AddCafePresetSlotCount(builder, CafePresetSlotCount): builder.PrependInt32Slot(9, CafePresetSlotCount, 0)
def ConstCommonExcelAddCafePresetSlotCount(builder, CafePresetSlotCount):
    """This method is deprecated. Please switch to AddCafePresetSlotCount."""
    return AddCafePresetSlotCount(builder, CafePresetSlotCount)
def AddCafeMonologueIntervalMillisec(builder, CafeMonologueIntervalMillisec): builder.PrependInt64Slot(10, CafeMonologueIntervalMillisec, 0)
def ConstCommonExcelAddCafeMonologueIntervalMillisec(builder, CafeMonologueIntervalMillisec):
    """This method is deprecated. Please switch to AddCafeMonologueIntervalMillisec."""
    return AddCafeMonologueIntervalMillisec(builder, CafeMonologueIntervalMillisec)
def AddCafeMonologueDefaultDuration(builder, CafeMonologueDefaultDuration): builder.PrependInt64Slot(11, CafeMonologueDefaultDuration, 0)
def ConstCommonExcelAddCafeMonologueDefaultDuration(builder, CafeMonologueDefaultDuration):
    """This method is deprecated. Please switch to AddCafeMonologueDefaultDuration."""
    return AddCafeMonologueDefaultDuration(builder, CafeMonologueDefaultDuration)
def AddCafeBubbleIdleDurationMilliSec(builder, CafeBubbleIdleDurationMilliSec): builder.PrependInt64Slot(12, CafeBubbleIdleDurationMilliSec, 0)
def ConstCommonExcelAddCafeBubbleIdleDurationMilliSec(builder, CafeBubbleIdleDurationMilliSec):
    """This method is deprecated. Please switch to AddCafeBubbleIdleDurationMilliSec."""
    return AddCafeBubbleIdleDurationMilliSec(builder, CafeBubbleIdleDurationMilliSec)
def AddFindGiftTimeLimit(builder, FindGiftTimeLimit): builder.PrependInt32Slot(13, FindGiftTimeLimit, 0)
def ConstCommonExcelAddFindGiftTimeLimit(builder, FindGiftTimeLimit):
    """This method is deprecated. Please switch to AddFindGiftTimeLimit."""
    return AddFindGiftTimeLimit(builder, FindGiftTimeLimit)
def AddCafeVisitProbabilityBase(builder, CafeVisitProbabilityBase): builder.PrependInt32Slot(14, CafeVisitProbabilityBase, 0)
def ConstCommonExcelAddCafeVisitProbabilityBase(builder, CafeVisitProbabilityBase):
    """This method is deprecated. Please switch to AddCafeVisitProbabilityBase."""
    return AddCafeVisitProbabilityBase(builder, CafeVisitProbabilityBase)
def AddCafeVisitProbabilityTagBonus(builder, CafeVisitProbabilityTagBonus): builder.PrependInt32Slot(15, CafeVisitProbabilityTagBonus, 0)
def ConstCommonExcelAddCafeVisitProbabilityTagBonus(builder, CafeVisitProbabilityTagBonus):
    """This method is deprecated. Please switch to AddCafeVisitProbabilityTagBonus."""
    return AddCafeVisitProbabilityTagBonus(builder, CafeVisitProbabilityTagBonus)
def AddCafeAutoChargePeriodInMsc(builder, CafeAutoChargePeriodInMsc): builder.PrependInt32Slot(16, CafeAutoChargePeriodInMsc, 0)
def ConstCommonExcelAddCafeAutoChargePeriodInMsc(builder, CafeAutoChargePeriodInMsc):
    """This method is deprecated. Please switch to AddCafeAutoChargePeriodInMsc."""
    return AddCafeAutoChargePeriodInMsc(builder, CafeAutoChargePeriodInMsc)
def AddCafeProductionDecimalPosition(builder, CafeProductionDecimalPosition): builder.PrependInt32Slot(17, CafeProductionDecimalPosition, 0)
def ConstCommonExcelAddCafeProductionDecimalPosition(builder, CafeProductionDecimalPosition):
    """This method is deprecated. Please switch to AddCafeProductionDecimalPosition."""
    return AddCafeProductionDecimalPosition(builder, CafeProductionDecimalPosition)
def AddCafeSetGroupApplyCount(builder, CafeSetGroupApplyCount): builder.PrependInt32Slot(18, CafeSetGroupApplyCount, 0)
def ConstCommonExcelAddCafeSetGroupApplyCount(builder, CafeSetGroupApplyCount):
    """This method is deprecated. Please switch to AddCafeSetGroupApplyCount."""
    return AddCafeSetGroupApplyCount(builder, CafeSetGroupApplyCount)
def AddWeekDungeonFindGiftRewardLimitCount(builder, WeekDungeonFindGiftRewardLimitCount): builder.PrependInt32Slot(19, WeekDungeonFindGiftRewardLimitCount, 0)
def ConstCommonExcelAddWeekDungeonFindGiftRewardLimitCount(builder, WeekDungeonFindGiftRewardLimitCount):
    """This method is deprecated. Please switch to AddWeekDungeonFindGiftRewardLimitCount."""
    return AddWeekDungeonFindGiftRewardLimitCount(builder, WeekDungeonFindGiftRewardLimitCount)
def AddStageFailedCurrencyRefundRate(builder, StageFailedCurrencyRefundRate): builder.PrependInt32Slot(20, StageFailedCurrencyRefundRate, 0)
def ConstCommonExcelAddStageFailedCurrencyRefundRate(builder, StageFailedCurrencyRefundRate):
    """This method is deprecated. Please switch to AddStageFailedCurrencyRefundRate."""
    return AddStageFailedCurrencyRefundRate(builder, StageFailedCurrencyRefundRate)
def AddEnterDeposit(builder, EnterDeposit): builder.PrependInt32Slot(21, EnterDeposit, 0)
def ConstCommonExcelAddEnterDeposit(builder, EnterDeposit):
    """This method is deprecated. Please switch to AddEnterDeposit."""
    return AddEnterDeposit(builder, EnterDeposit)
def AddAccountMaxLevel(builder, AccountMaxLevel): builder.PrependInt32Slot(22, AccountMaxLevel, 0)
def ConstCommonExcelAddAccountMaxLevel(builder, AccountMaxLevel):
    """This method is deprecated. Please switch to AddAccountMaxLevel."""
    return AddAccountMaxLevel(builder, AccountMaxLevel)
def AddMainSquadExpBonus(builder, MainSquadExpBonus): builder.PrependInt32Slot(23, MainSquadExpBonus, 0)
def ConstCommonExcelAddMainSquadExpBonus(builder, MainSquadExpBonus):
    """This method is deprecated. Please switch to AddMainSquadExpBonus."""
    return AddMainSquadExpBonus(builder, MainSquadExpBonus)
def AddSupportSquadExpBonus(builder, SupportSquadExpBonus): builder.PrependInt32Slot(24, SupportSquadExpBonus, 0)
def ConstCommonExcelAddSupportSquadExpBonus(builder, SupportSquadExpBonus):
    """This method is deprecated. Please switch to AddSupportSquadExpBonus."""
    return AddSupportSquadExpBonus(builder, SupportSquadExpBonus)
def AddAccountExpRatio(builder, AccountExpRatio): builder.PrependInt32Slot(25, AccountExpRatio, 0)
def ConstCommonExcelAddAccountExpRatio(builder, AccountExpRatio):
    """This method is deprecated. Please switch to AddAccountExpRatio."""
    return AddAccountExpRatio(builder, AccountExpRatio)
def AddMissionToastLifeTime(builder, MissionToastLifeTime): builder.PrependInt32Slot(26, MissionToastLifeTime, 0)
def ConstCommonExcelAddMissionToastLifeTime(builder, MissionToastLifeTime):
    """This method is deprecated. Please switch to AddMissionToastLifeTime."""
    return AddMissionToastLifeTime(builder, MissionToastLifeTime)
def AddExpItemInsertLimit(builder, ExpItemInsertLimit): builder.PrependInt32Slot(27, ExpItemInsertLimit, 0)
def ConstCommonExcelAddExpItemInsertLimit(builder, ExpItemInsertLimit):
    """This method is deprecated. Please switch to AddExpItemInsertLimit."""
    return AddExpItemInsertLimit(builder, ExpItemInsertLimit)
def AddExpItemInsertAccelTime(builder, ExpItemInsertAccelTime): builder.PrependInt32Slot(28, ExpItemInsertAccelTime, 0)
def ConstCommonExcelAddExpItemInsertAccelTime(builder, ExpItemInsertAccelTime):
    """This method is deprecated. Please switch to AddExpItemInsertAccelTime."""
    return AddExpItemInsertAccelTime(builder, ExpItemInsertAccelTime)
def AddCharacterLvUpCoefficient(builder, CharacterLvUpCoefficient): builder.PrependInt32Slot(29, CharacterLvUpCoefficient, 0)
def ConstCommonExcelAddCharacterLvUpCoefficient(builder, CharacterLvUpCoefficient):
    """This method is deprecated. Please switch to AddCharacterLvUpCoefficient."""
    return AddCharacterLvUpCoefficient(builder, CharacterLvUpCoefficient)
def AddEquipmentLvUpCoefficient(builder, EquipmentLvUpCoefficient): builder.PrependInt32Slot(30, EquipmentLvUpCoefficient, 0)
def ConstCommonExcelAddEquipmentLvUpCoefficient(builder, EquipmentLvUpCoefficient):
    """This method is deprecated. Please switch to AddEquipmentLvUpCoefficient."""
    return AddEquipmentLvUpCoefficient(builder, EquipmentLvUpCoefficient)
def AddExpEquipInsertLimit(builder, ExpEquipInsertLimit): builder.PrependInt32Slot(31, ExpEquipInsertLimit, 0)
def ConstCommonExcelAddExpEquipInsertLimit(builder, ExpEquipInsertLimit):
    """This method is deprecated. Please switch to AddExpEquipInsertLimit."""
    return AddExpEquipInsertLimit(builder, ExpEquipInsertLimit)
def AddEquipLvUpCoefficient(builder, EquipLvUpCoefficient): builder.PrependInt32Slot(32, EquipLvUpCoefficient, 0)
def ConstCommonExcelAddEquipLvUpCoefficient(builder, EquipLvUpCoefficient):
    """This method is deprecated. Please switch to AddEquipLvUpCoefficient."""
    return AddEquipLvUpCoefficient(builder, EquipLvUpCoefficient)
def AddNicknameLength(builder, NicknameLength): builder.PrependInt32Slot(33, NicknameLength, 0)
def ConstCommonExcelAddNicknameLength(builder, NicknameLength):
    """This method is deprecated. Please switch to AddNicknameLength."""
    return AddNicknameLength(builder, NicknameLength)
def AddCraftDuration(builder, CraftDuration): builder.PrependUOffsetTRelativeSlot(34, flatbuffers.number_types.UOffsetTFlags.py_type(CraftDuration), 0)
def ConstCommonExcelAddCraftDuration(builder, CraftDuration):
    """This method is deprecated. Please switch to AddCraftDuration."""
    return AddCraftDuration(builder, CraftDuration)
def StartCraftDurationVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def ConstCommonExcelStartCraftDurationVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartCraftDurationVector(builder, numElems)
def AddCraftLimitTime(builder, CraftLimitTime): builder.PrependInt32Slot(35, CraftLimitTime, 0)
def ConstCommonExcelAddCraftLimitTime(builder, CraftLimitTime):
    """This method is deprecated. Please switch to AddCraftLimitTime."""
    return AddCraftLimitTime(builder, CraftLimitTime)
def AddCraftTicketItemUniqueId(builder, CraftTicketItemUniqueId): builder.PrependInt32Slot(36, CraftTicketItemUniqueId, 0)
def ConstCommonExcelAddCraftTicketItemUniqueId(builder, CraftTicketItemUniqueId):
    """This method is deprecated. Please switch to AddCraftTicketItemUniqueId."""
    return AddCraftTicketItemUniqueId(builder, CraftTicketItemUniqueId)
def AddCraftTicketConsumeAmount(builder, CraftTicketConsumeAmount): builder.PrependInt32Slot(37, CraftTicketConsumeAmount, 0)
def ConstCommonExcelAddCraftTicketConsumeAmount(builder, CraftTicketConsumeAmount):
    """This method is deprecated. Please switch to AddCraftTicketConsumeAmount."""
    return AddCraftTicketConsumeAmount(builder, CraftTicketConsumeAmount)
def AddAcademyTicketCost(builder, AcademyTicketCost): builder.PrependInt32Slot(38, AcademyTicketCost, 0)
def ConstCommonExcelAddAcademyTicketCost(builder, AcademyTicketCost):
    """This method is deprecated. Please switch to AddAcademyTicketCost."""
    return AddAcademyTicketCost(builder, AcademyTicketCost)
def AddMassangerMessageExpireDay(builder, MassangerMessageExpireDay): builder.PrependInt32Slot(39, MassangerMessageExpireDay, 0)
def ConstCommonExcelAddMassangerMessageExpireDay(builder, MassangerMessageExpireDay):
    """This method is deprecated. Please switch to AddMassangerMessageExpireDay."""
    return AddMassangerMessageExpireDay(builder, MassangerMessageExpireDay)
def AddCraftLeafNodeGenerateLv1Count(builder, CraftLeafNodeGenerateLv1Count): builder.PrependInt32Slot(40, CraftLeafNodeGenerateLv1Count, 0)
def ConstCommonExcelAddCraftLeafNodeGenerateLv1Count(builder, CraftLeafNodeGenerateLv1Count):
    """This method is deprecated. Please switch to AddCraftLeafNodeGenerateLv1Count."""
    return AddCraftLeafNodeGenerateLv1Count(builder, CraftLeafNodeGenerateLv1Count)
def AddCraftLeafNodeGenerateLv2Count(builder, CraftLeafNodeGenerateLv2Count): builder.PrependInt32Slot(41, CraftLeafNodeGenerateLv2Count, 0)
def ConstCommonExcelAddCraftLeafNodeGenerateLv2Count(builder, CraftLeafNodeGenerateLv2Count):
    """This method is deprecated. Please switch to AddCraftLeafNodeGenerateLv2Count."""
    return AddCraftLeafNodeGenerateLv2Count(builder, CraftLeafNodeGenerateLv2Count)
def AddTutorialGachaShopId(builder, TutorialGachaShopId): builder.PrependInt32Slot(42, TutorialGachaShopId, 0)
def ConstCommonExcelAddTutorialGachaShopId(builder, TutorialGachaShopId):
    """This method is deprecated. Please switch to AddTutorialGachaShopId."""
    return AddTutorialGachaShopId(builder, TutorialGachaShopId)
def AddTutorialGachaGoodsId(builder, TutorialGachaGoodsId): builder.PrependInt32Slot(43, TutorialGachaGoodsId, 0)
def ConstCommonExcelAddTutorialGachaGoodsId(builder, TutorialGachaGoodsId):
    """This method is deprecated. Please switch to AddTutorialGachaGoodsId."""
    return AddTutorialGachaGoodsId(builder, TutorialGachaGoodsId)
def AddEquipmentSlotOpenLevel(builder, EquipmentSlotOpenLevel): builder.PrependUOffsetTRelativeSlot(44, flatbuffers.number_types.UOffsetTFlags.py_type(EquipmentSlotOpenLevel), 0)
def ConstCommonExcelAddEquipmentSlotOpenLevel(builder, EquipmentSlotOpenLevel):
    """This method is deprecated. Please switch to AddEquipmentSlotOpenLevel."""
    return AddEquipmentSlotOpenLevel(builder, EquipmentSlotOpenLevel)
def StartEquipmentSlotOpenLevelVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def ConstCommonExcelStartEquipmentSlotOpenLevelVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartEquipmentSlotOpenLevelVector(builder, numElems)
def AddScenarioAutoDelayMillisec(builder, ScenarioAutoDelayMillisec): builder.PrependFloat32Slot(45, ScenarioAutoDelayMillisec, 0.0)
def ConstCommonExcelAddScenarioAutoDelayMillisec(builder, ScenarioAutoDelayMillisec):
    """This method is deprecated. Please switch to AddScenarioAutoDelayMillisec."""
    return AddScenarioAutoDelayMillisec(builder, ScenarioAutoDelayMillisec)
def AddJoinOrCreateClanCoolTimeFromHour(builder, JoinOrCreateClanCoolTimeFromHour): builder.PrependInt64Slot(46, JoinOrCreateClanCoolTimeFromHour, 0)
def ConstCommonExcelAddJoinOrCreateClanCoolTimeFromHour(builder, JoinOrCreateClanCoolTimeFromHour):
    """This method is deprecated. Please switch to AddJoinOrCreateClanCoolTimeFromHour."""
    return AddJoinOrCreateClanCoolTimeFromHour(builder, JoinOrCreateClanCoolTimeFromHour)
def AddClanMaxMember(builder, ClanMaxMember): builder.PrependInt64Slot(47, ClanMaxMember, 0)
def ConstCommonExcelAddClanMaxMember(builder, ClanMaxMember):
    """This method is deprecated. Please switch to AddClanMaxMember."""
    return AddClanMaxMember(builder, ClanMaxMember)
def AddClanSearchResultCount(builder, ClanSearchResultCount): builder.PrependInt64Slot(48, ClanSearchResultCount, 0)
def ConstCommonExcelAddClanSearchResultCount(builder, ClanSearchResultCount):
    """This method is deprecated. Please switch to AddClanSearchResultCount."""
    return AddClanSearchResultCount(builder, ClanSearchResultCount)
def AddClanMaxApplicant(builder, ClanMaxApplicant): builder.PrependInt64Slot(49, ClanMaxApplicant, 0)
def ConstCommonExcelAddClanMaxApplicant(builder, ClanMaxApplicant):
    """This method is deprecated. Please switch to AddClanMaxApplicant."""
    return AddClanMaxApplicant(builder, ClanMaxApplicant)
def AddClanRejoinCoolTimeFromSecond(builder, ClanRejoinCoolTimeFromSecond): builder.PrependInt64Slot(50, ClanRejoinCoolTimeFromSecond, 0)
def ConstCommonExcelAddClanRejoinCoolTimeFromSecond(builder, ClanRejoinCoolTimeFromSecond):
    """This method is deprecated. Please switch to AddClanRejoinCoolTimeFromSecond."""
    return AddClanRejoinCoolTimeFromSecond(builder, ClanRejoinCoolTimeFromSecond)
def AddClanWordBalloonMaxCharacter(builder, ClanWordBalloonMaxCharacter): builder.PrependInt32Slot(51, ClanWordBalloonMaxCharacter, 0)
def ConstCommonExcelAddClanWordBalloonMaxCharacter(builder, ClanWordBalloonMaxCharacter):
    """This method is deprecated. Please switch to AddClanWordBalloonMaxCharacter."""
    return AddClanWordBalloonMaxCharacter(builder, ClanWordBalloonMaxCharacter)
def AddCallNameRenameCoolTimeFromHour(builder, CallNameRenameCoolTimeFromHour): builder.PrependInt64Slot(52, CallNameRenameCoolTimeFromHour, 0)
def ConstCommonExcelAddCallNameRenameCoolTimeFromHour(builder, CallNameRenameCoolTimeFromHour):
    """This method is deprecated. Please switch to AddCallNameRenameCoolTimeFromHour."""
    return AddCallNameRenameCoolTimeFromHour(builder, CallNameRenameCoolTimeFromHour)
def AddCallNameMinimumLength(builder, CallNameMinimumLength): builder.PrependInt64Slot(53, CallNameMinimumLength, 0)
def ConstCommonExcelAddCallNameMinimumLength(builder, CallNameMinimumLength):
    """This method is deprecated. Please switch to AddCallNameMinimumLength."""
    return AddCallNameMinimumLength(builder, CallNameMinimumLength)
def AddCallNameMaximumLength(builder, CallNameMaximumLength): builder.PrependInt64Slot(54, CallNameMaximumLength, 0)
def ConstCommonExcelAddCallNameMaximumLength(builder, CallNameMaximumLength):
    """This method is deprecated. Please switch to AddCallNameMaximumLength."""
    return AddCallNameMaximumLength(builder, CallNameMaximumLength)
def AddLobbyToScreenModeWaitTime(builder, LobbyToScreenModeWaitTime): builder.PrependInt64Slot(55, LobbyToScreenModeWaitTime, 0)
def ConstCommonExcelAddLobbyToScreenModeWaitTime(builder, LobbyToScreenModeWaitTime):
    """This method is deprecated. Please switch to AddLobbyToScreenModeWaitTime."""
    return AddLobbyToScreenModeWaitTime(builder, LobbyToScreenModeWaitTime)
def AddScreenshotToLobbyButtonHideDelay(builder, ScreenshotToLobbyButtonHideDelay): builder.PrependInt64Slot(56, ScreenshotToLobbyButtonHideDelay, 0)
def ConstCommonExcelAddScreenshotToLobbyButtonHideDelay(builder, ScreenshotToLobbyButtonHideDelay):
    """This method is deprecated. Please switch to AddScreenshotToLobbyButtonHideDelay."""
    return AddScreenshotToLobbyButtonHideDelay(builder, ScreenshotToLobbyButtonHideDelay)
def AddPrologueScenarioID01(builder, PrologueScenarioID01): builder.PrependInt64Slot(57, PrologueScenarioID01, 0)
def ConstCommonExcelAddPrologueScenarioID01(builder, PrologueScenarioID01):
    """This method is deprecated. Please switch to AddPrologueScenarioID01."""
    return AddPrologueScenarioID01(builder, PrologueScenarioID01)
def AddPrologueScenarioID02(builder, PrologueScenarioID02): builder.PrependInt64Slot(58, PrologueScenarioID02, 0)
def ConstCommonExcelAddPrologueScenarioID02(builder, PrologueScenarioID02):
    """This method is deprecated. Please switch to AddPrologueScenarioID02."""
    return AddPrologueScenarioID02(builder, PrologueScenarioID02)
def AddTutorialHardStage11(builder, TutorialHardStage11): builder.PrependInt64Slot(59, TutorialHardStage11, 0)
def ConstCommonExcelAddTutorialHardStage11(builder, TutorialHardStage11):
    """This method is deprecated. Please switch to AddTutorialHardStage11."""
    return AddTutorialHardStage11(builder, TutorialHardStage11)
def AddTutorialSpeedButtonStage(builder, TutorialSpeedButtonStage): builder.PrependInt64Slot(60, TutorialSpeedButtonStage, 0)
def ConstCommonExcelAddTutorialSpeedButtonStage(builder, TutorialSpeedButtonStage):
    """This method is deprecated. Please switch to AddTutorialSpeedButtonStage."""
    return AddTutorialSpeedButtonStage(builder, TutorialSpeedButtonStage)
def AddTutorialCharacterDefaultCount(builder, TutorialCharacterDefaultCount): builder.PrependInt64Slot(61, TutorialCharacterDefaultCount, 0)
def ConstCommonExcelAddTutorialCharacterDefaultCount(builder, TutorialCharacterDefaultCount):
    """This method is deprecated. Please switch to AddTutorialCharacterDefaultCount."""
    return AddTutorialCharacterDefaultCount(builder, TutorialCharacterDefaultCount)
def AddTutorialShopCategoryType(builder, TutorialShopCategoryType): builder.PrependInt32Slot(62, TutorialShopCategoryType, 0)
def ConstCommonExcelAddTutorialShopCategoryType(builder, TutorialShopCategoryType):
    """This method is deprecated. Please switch to AddTutorialShopCategoryType."""
    return AddTutorialShopCategoryType(builder, TutorialShopCategoryType)
def AddAdventureStrategyPlayTimeLimitInSeconds(builder, AdventureStrategyPlayTimeLimitInSeconds): builder.PrependInt64Slot(63, AdventureStrategyPlayTimeLimitInSeconds, 0)
def ConstCommonExcelAddAdventureStrategyPlayTimeLimitInSeconds(builder, AdventureStrategyPlayTimeLimitInSeconds):
    """This method is deprecated. Please switch to AddAdventureStrategyPlayTimeLimitInSeconds."""
    return AddAdventureStrategyPlayTimeLimitInSeconds(builder, AdventureStrategyPlayTimeLimitInSeconds)
def AddEventStrategyPlayTimeLimitInSeconds(builder, EventStrategyPlayTimeLimitInSeconds): builder.PrependInt64Slot(64, EventStrategyPlayTimeLimitInSeconds, 0)
def ConstCommonExcelAddEventStrategyPlayTimeLimitInSeconds(builder, EventStrategyPlayTimeLimitInSeconds):
    """This method is deprecated. Please switch to AddEventStrategyPlayTimeLimitInSeconds."""
    return AddEventStrategyPlayTimeLimitInSeconds(builder, EventStrategyPlayTimeLimitInSeconds)
def AddWeekDungoenTacticPlayTimeLimitInSeconds(builder, WeekDungoenTacticPlayTimeLimitInSeconds): builder.PrependInt64Slot(65, WeekDungoenTacticPlayTimeLimitInSeconds, 0)
def ConstCommonExcelAddWeekDungoenTacticPlayTimeLimitInSeconds(builder, WeekDungoenTacticPlayTimeLimitInSeconds):
    """This method is deprecated. Please switch to AddWeekDungoenTacticPlayTimeLimitInSeconds."""
    return AddWeekDungoenTacticPlayTimeLimitInSeconds(builder, WeekDungoenTacticPlayTimeLimitInSeconds)
def AddRaidTacticPlayTimeLimitInSeconds(builder, RaidTacticPlayTimeLimitInSeconds): builder.PrependInt64Slot(66, RaidTacticPlayTimeLimitInSeconds, 0)
def ConstCommonExcelAddRaidTacticPlayTimeLimitInSeconds(builder, RaidTacticPlayTimeLimitInSeconds):
    """This method is deprecated. Please switch to AddRaidTacticPlayTimeLimitInSeconds."""
    return AddRaidTacticPlayTimeLimitInSeconds(builder, RaidTacticPlayTimeLimitInSeconds)
def AddRaidOpponentListAmount(builder, RaidOpponentListAmount): builder.PrependInt64Slot(67, RaidOpponentListAmount, 0)
def ConstCommonExcelAddRaidOpponentListAmount(builder, RaidOpponentListAmount):
    """This method is deprecated. Please switch to AddRaidOpponentListAmount."""
    return AddRaidOpponentListAmount(builder, RaidOpponentListAmount)
def AddCraftBaseGoldRequired(builder, CraftBaseGoldRequired): builder.PrependUOffsetTRelativeSlot(68, flatbuffers.number_types.UOffsetTFlags.py_type(CraftBaseGoldRequired), 0)
def ConstCommonExcelAddCraftBaseGoldRequired(builder, CraftBaseGoldRequired):
    """This method is deprecated. Please switch to AddCraftBaseGoldRequired."""
    return AddCraftBaseGoldRequired(builder, CraftBaseGoldRequired)
def StartCraftBaseGoldRequiredVector(builder, numElems): return builder.StartVector(8, numElems, 8)
def ConstCommonExcelStartCraftBaseGoldRequiredVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartCraftBaseGoldRequiredVector(builder, numElems)
def AddPostExpiredDayAttendance(builder, PostExpiredDayAttendance): builder.PrependInt32Slot(69, PostExpiredDayAttendance, 0)
def ConstCommonExcelAddPostExpiredDayAttendance(builder, PostExpiredDayAttendance):
    """This method is deprecated. Please switch to AddPostExpiredDayAttendance."""
    return AddPostExpiredDayAttendance(builder, PostExpiredDayAttendance)
def AddPostExpiredDayInventoryOverflow(builder, PostExpiredDayInventoryOverflow): builder.PrependInt32Slot(70, PostExpiredDayInventoryOverflow, 0)
def ConstCommonExcelAddPostExpiredDayInventoryOverflow(builder, PostExpiredDayInventoryOverflow):
    """This method is deprecated. Please switch to AddPostExpiredDayInventoryOverflow."""
    return AddPostExpiredDayInventoryOverflow(builder, PostExpiredDayInventoryOverflow)
def AddPostExpiredDayGameManager(builder, PostExpiredDayGameManager): builder.PrependInt32Slot(71, PostExpiredDayGameManager, 0)
def ConstCommonExcelAddPostExpiredDayGameManager(builder, PostExpiredDayGameManager):
    """This method is deprecated. Please switch to AddPostExpiredDayGameManager."""
    return AddPostExpiredDayGameManager(builder, PostExpiredDayGameManager)
def AddUILabelCharacterWrap(builder, UILabelCharacterWrap): builder.PrependUOffsetTRelativeSlot(72, flatbuffers.number_types.UOffsetTFlags.py_type(UILabelCharacterWrap), 0)
def ConstCommonExcelAddUILabelCharacterWrap(builder, UILabelCharacterWrap):
    """This method is deprecated. Please switch to AddUILabelCharacterWrap."""
    return AddUILabelCharacterWrap(builder, UILabelCharacterWrap)
def AddRequestTimeOut(builder, RequestTimeOut): builder.PrependFloat32Slot(73, RequestTimeOut, 0.0)
def ConstCommonExcelAddRequestTimeOut(builder, RequestTimeOut):
    """This method is deprecated. Please switch to AddRequestTimeOut."""
    return AddRequestTimeOut(builder, RequestTimeOut)
def AddMailStorageSoftCap(builder, MailStorageSoftCap): builder.PrependInt32Slot(74, MailStorageSoftCap, 0)
def ConstCommonExcelAddMailStorageSoftCap(builder, MailStorageSoftCap):
    """This method is deprecated. Please switch to AddMailStorageSoftCap."""
    return AddMailStorageSoftCap(builder, MailStorageSoftCap)
def AddMailStorageHardCap(builder, MailStorageHardCap): builder.PrependInt32Slot(75, MailStorageHardCap, 0)
def ConstCommonExcelAddMailStorageHardCap(builder, MailStorageHardCap):
    """This method is deprecated. Please switch to AddMailStorageHardCap."""
    return AddMailStorageHardCap(builder, MailStorageHardCap)
def AddClearDeckStorageSize(builder, ClearDeckStorageSize): builder.PrependInt32Slot(76, ClearDeckStorageSize, 0)
def ConstCommonExcelAddClearDeckStorageSize(builder, ClearDeckStorageSize):
    """This method is deprecated. Please switch to AddClearDeckStorageSize."""
    return AddClearDeckStorageSize(builder, ClearDeckStorageSize)
def AddClearDeckNoStarViewCount(builder, ClearDeckNoStarViewCount): builder.PrependInt32Slot(77, ClearDeckNoStarViewCount, 0)
def ConstCommonExcelAddClearDeckNoStarViewCount(builder, ClearDeckNoStarViewCount):
    """This method is deprecated. Please switch to AddClearDeckNoStarViewCount."""
    return AddClearDeckNoStarViewCount(builder, ClearDeckNoStarViewCount)
def AddClearDeck1StarViewCount(builder, ClearDeck1StarViewCount): builder.PrependInt32Slot(78, ClearDeck1StarViewCount, 0)
def ConstCommonExcelAddClearDeck1StarViewCount(builder, ClearDeck1StarViewCount):
    """This method is deprecated. Please switch to AddClearDeck1StarViewCount."""
    return AddClearDeck1StarViewCount(builder, ClearDeck1StarViewCount)
def AddClearDeck2StarViewCount(builder, ClearDeck2StarViewCount): builder.PrependInt32Slot(79, ClearDeck2StarViewCount, 0)
def ConstCommonExcelAddClearDeck2StarViewCount(builder, ClearDeck2StarViewCount):
    """This method is deprecated. Please switch to AddClearDeck2StarViewCount."""
    return AddClearDeck2StarViewCount(builder, ClearDeck2StarViewCount)
def AddClearDeck3StarViewCount(builder, ClearDeck3StarViewCount): builder.PrependInt32Slot(80, ClearDeck3StarViewCount, 0)
def ConstCommonExcelAddClearDeck3StarViewCount(builder, ClearDeck3StarViewCount):
    """This method is deprecated. Please switch to AddClearDeck3StarViewCount."""
    return AddClearDeck3StarViewCount(builder, ClearDeck3StarViewCount)
def AddExSkillLevelMax(builder, ExSkillLevelMax): builder.PrependInt32Slot(81, ExSkillLevelMax, 0)
def ConstCommonExcelAddExSkillLevelMax(builder, ExSkillLevelMax):
    """This method is deprecated. Please switch to AddExSkillLevelMax."""
    return AddExSkillLevelMax(builder, ExSkillLevelMax)
def AddPublicSkillLevelMax(builder, PublicSkillLevelMax): builder.PrependInt32Slot(82, PublicSkillLevelMax, 0)
def ConstCommonExcelAddPublicSkillLevelMax(builder, PublicSkillLevelMax):
    """This method is deprecated. Please switch to AddPublicSkillLevelMax."""
    return AddPublicSkillLevelMax(builder, PublicSkillLevelMax)
def AddPassiveSkillLevelMax(builder, PassiveSkillLevelMax): builder.PrependInt32Slot(83, PassiveSkillLevelMax, 0)
def ConstCommonExcelAddPassiveSkillLevelMax(builder, PassiveSkillLevelMax):
    """This method is deprecated. Please switch to AddPassiveSkillLevelMax."""
    return AddPassiveSkillLevelMax(builder, PassiveSkillLevelMax)
def AddExtraPassiveSkillLevelMax(builder, ExtraPassiveSkillLevelMax): builder.PrependInt32Slot(84, ExtraPassiveSkillLevelMax, 0)
def ConstCommonExcelAddExtraPassiveSkillLevelMax(builder, ExtraPassiveSkillLevelMax):
    """This method is deprecated. Please switch to AddExtraPassiveSkillLevelMax."""
    return AddExtraPassiveSkillLevelMax(builder, ExtraPassiveSkillLevelMax)
def AddAccountCommentMaxLength(builder, AccountCommentMaxLength): builder.PrependInt32Slot(85, AccountCommentMaxLength, 0)
def ConstCommonExcelAddAccountCommentMaxLength(builder, AccountCommentMaxLength):
    """This method is deprecated. Please switch to AddAccountCommentMaxLength."""
    return AddAccountCommentMaxLength(builder, AccountCommentMaxLength)
def AddFormationCollider01OffsetX(builder, FormationCollider01OffsetX): builder.PrependInt64Slot(86, FormationCollider01OffsetX, 0)
def ConstCommonExcelAddFormationCollider01OffsetX(builder, FormationCollider01OffsetX):
    """This method is deprecated. Please switch to AddFormationCollider01OffsetX."""
    return AddFormationCollider01OffsetX(builder, FormationCollider01OffsetX)
def AddFormationCollider01OffsetY(builder, FormationCollider01OffsetY): builder.PrependInt64Slot(87, FormationCollider01OffsetY, 0)
def ConstCommonExcelAddFormationCollider01OffsetY(builder, FormationCollider01OffsetY):
    """This method is deprecated. Please switch to AddFormationCollider01OffsetY."""
    return AddFormationCollider01OffsetY(builder, FormationCollider01OffsetY)
def AddFormationCollider01OffsetZ(builder, FormationCollider01OffsetZ): builder.PrependInt64Slot(88, FormationCollider01OffsetZ, 0)
def ConstCommonExcelAddFormationCollider01OffsetZ(builder, FormationCollider01OffsetZ):
    """This method is deprecated. Please switch to AddFormationCollider01OffsetZ."""
    return AddFormationCollider01OffsetZ(builder, FormationCollider01OffsetZ)
def AddFormationCollider01SizeX(builder, FormationCollider01SizeX): builder.PrependInt64Slot(89, FormationCollider01SizeX, 0)
def ConstCommonExcelAddFormationCollider01SizeX(builder, FormationCollider01SizeX):
    """This method is deprecated. Please switch to AddFormationCollider01SizeX."""
    return AddFormationCollider01SizeX(builder, FormationCollider01SizeX)
def AddFormationCollider01SizeY(builder, FormationCollider01SizeY): builder.PrependInt64Slot(90, FormationCollider01SizeY, 0)
def ConstCommonExcelAddFormationCollider01SizeY(builder, FormationCollider01SizeY):
    """This method is deprecated. Please switch to AddFormationCollider01SizeY."""
    return AddFormationCollider01SizeY(builder, FormationCollider01SizeY)
def AddFormationCollider01SizeZ(builder, FormationCollider01SizeZ): builder.PrependInt64Slot(91, FormationCollider01SizeZ, 0)
def ConstCommonExcelAddFormationCollider01SizeZ(builder, FormationCollider01SizeZ):
    """This method is deprecated. Please switch to AddFormationCollider01SizeZ."""
    return AddFormationCollider01SizeZ(builder, FormationCollider01SizeZ)
def AddFormationCollider02OffsetX(builder, FormationCollider02OffsetX): builder.PrependInt64Slot(92, FormationCollider02OffsetX, 0)
def ConstCommonExcelAddFormationCollider02OffsetX(builder, FormationCollider02OffsetX):
    """This method is deprecated. Please switch to AddFormationCollider02OffsetX."""
    return AddFormationCollider02OffsetX(builder, FormationCollider02OffsetX)
def AddFormationCollider02OffsetY(builder, FormationCollider02OffsetY): builder.PrependInt64Slot(93, FormationCollider02OffsetY, 0)
def ConstCommonExcelAddFormationCollider02OffsetY(builder, FormationCollider02OffsetY):
    """This method is deprecated. Please switch to AddFormationCollider02OffsetY."""
    return AddFormationCollider02OffsetY(builder, FormationCollider02OffsetY)
def AddFormationCollider02OffsetZ(builder, FormationCollider02OffsetZ): builder.PrependInt64Slot(94, FormationCollider02OffsetZ, 0)
def ConstCommonExcelAddFormationCollider02OffsetZ(builder, FormationCollider02OffsetZ):
    """This method is deprecated. Please switch to AddFormationCollider02OffsetZ."""
    return AddFormationCollider02OffsetZ(builder, FormationCollider02OffsetZ)
def AddFormationCollider02SizeX(builder, FormationCollider02SizeX): builder.PrependInt64Slot(95, FormationCollider02SizeX, 0)
def ConstCommonExcelAddFormationCollider02SizeX(builder, FormationCollider02SizeX):
    """This method is deprecated. Please switch to AddFormationCollider02SizeX."""
    return AddFormationCollider02SizeX(builder, FormationCollider02SizeX)
def AddFormationCollider02SizeY(builder, FormationCollider02SizeY): builder.PrependInt64Slot(96, FormationCollider02SizeY, 0)
def ConstCommonExcelAddFormationCollider02SizeY(builder, FormationCollider02SizeY):
    """This method is deprecated. Please switch to AddFormationCollider02SizeY."""
    return AddFormationCollider02SizeY(builder, FormationCollider02SizeY)
def AddFormationCollider02SizeZ(builder, FormationCollider02SizeZ): builder.PrependInt64Slot(97, FormationCollider02SizeZ, 0)
def ConstCommonExcelAddFormationCollider02SizeZ(builder, FormationCollider02SizeZ):
    """This method is deprecated. Please switch to AddFormationCollider02SizeZ."""
    return AddFormationCollider02SizeZ(builder, FormationCollider02SizeZ)
def AddFormationCollider03OffsetX(builder, FormationCollider03OffsetX): builder.PrependInt64Slot(98, FormationCollider03OffsetX, 0)
def ConstCommonExcelAddFormationCollider03OffsetX(builder, FormationCollider03OffsetX):
    """This method is deprecated. Please switch to AddFormationCollider03OffsetX."""
    return AddFormationCollider03OffsetX(builder, FormationCollider03OffsetX)
def AddFormationCollider03OffsetY(builder, FormationCollider03OffsetY): builder.PrependInt64Slot(99, FormationCollider03OffsetY, 0)
def ConstCommonExcelAddFormationCollider03OffsetY(builder, FormationCollider03OffsetY):
    """This method is deprecated. Please switch to AddFormationCollider03OffsetY."""
    return AddFormationCollider03OffsetY(builder, FormationCollider03OffsetY)
def AddFormationCollider03OffsetZ(builder, FormationCollider03OffsetZ): builder.PrependInt64Slot(100, FormationCollider03OffsetZ, 0)
def ConstCommonExcelAddFormationCollider03OffsetZ(builder, FormationCollider03OffsetZ):
    """This method is deprecated. Please switch to AddFormationCollider03OffsetZ."""
    return AddFormationCollider03OffsetZ(builder, FormationCollider03OffsetZ)
def AddFormationCollider03SizeX(builder, FormationCollider03SizeX): builder.PrependInt64Slot(101, FormationCollider03SizeX, 0)
def ConstCommonExcelAddFormationCollider03SizeX(builder, FormationCollider03SizeX):
    """This method is deprecated. Please switch to AddFormationCollider03SizeX."""
    return AddFormationCollider03SizeX(builder, FormationCollider03SizeX)
def AddFormationCollider03SizeY(builder, FormationCollider03SizeY): builder.PrependInt64Slot(102, FormationCollider03SizeY, 0)
def ConstCommonExcelAddFormationCollider03SizeY(builder, FormationCollider03SizeY):
    """This method is deprecated. Please switch to AddFormationCollider03SizeY."""
    return AddFormationCollider03SizeY(builder, FormationCollider03SizeY)
def AddFormationCollider03SizeZ(builder, FormationCollider03SizeZ): builder.PrependInt64Slot(103, FormationCollider03SizeZ, 0)
def ConstCommonExcelAddFormationCollider03SizeZ(builder, FormationCollider03SizeZ):
    """This method is deprecated. Please switch to AddFormationCollider03SizeZ."""
    return AddFormationCollider03SizeZ(builder, FormationCollider03SizeZ)
def AddShowFurnitureTag(builder, ShowFurnitureTag): builder.PrependBoolSlot(104, ShowFurnitureTag, 0)
def ConstCommonExcelAddShowFurnitureTag(builder, ShowFurnitureTag):
    """This method is deprecated. Please switch to AddShowFurnitureTag."""
    return AddShowFurnitureTag(builder, ShowFurnitureTag)
def AddCafeSummonCoolTimeFromHour(builder, CafeSummonCoolTimeFromHour): builder.PrependInt32Slot(105, CafeSummonCoolTimeFromHour, 0)
def ConstCommonExcelAddCafeSummonCoolTimeFromHour(builder, CafeSummonCoolTimeFromHour):
    """This method is deprecated. Please switch to AddCafeSummonCoolTimeFromHour."""
    return AddCafeSummonCoolTimeFromHour(builder, CafeSummonCoolTimeFromHour)
def AddLimitedStageDailyClearCount(builder, LimitedStageDailyClearCount): builder.PrependInt64Slot(106, LimitedStageDailyClearCount, 0)
def ConstCommonExcelAddLimitedStageDailyClearCount(builder, LimitedStageDailyClearCount):
    """This method is deprecated. Please switch to AddLimitedStageDailyClearCount."""
    return AddLimitedStageDailyClearCount(builder, LimitedStageDailyClearCount)
def AddLimitedStageEntryTimeLimit(builder, LimitedStageEntryTimeLimit): builder.PrependInt64Slot(107, LimitedStageEntryTimeLimit, 0)
def ConstCommonExcelAddLimitedStageEntryTimeLimit(builder, LimitedStageEntryTimeLimit):
    """This method is deprecated. Please switch to AddLimitedStageEntryTimeLimit."""
    return AddLimitedStageEntryTimeLimit(builder, LimitedStageEntryTimeLimit)
def AddLimitedStageEntryTimeBuffer(builder, LimitedStageEntryTimeBuffer): builder.PrependInt64Slot(108, LimitedStageEntryTimeBuffer, 0)
def ConstCommonExcelAddLimitedStageEntryTimeBuffer(builder, LimitedStageEntryTimeBuffer):
    """This method is deprecated. Please switch to AddLimitedStageEntryTimeBuffer."""
    return AddLimitedStageEntryTimeBuffer(builder, LimitedStageEntryTimeBuffer)
def AddLimitedStagePointAmount(builder, LimitedStagePointAmount): builder.PrependInt64Slot(109, LimitedStagePointAmount, 0)
def ConstCommonExcelAddLimitedStagePointAmount(builder, LimitedStagePointAmount):
    """This method is deprecated. Please switch to AddLimitedStagePointAmount."""
    return AddLimitedStagePointAmount(builder, LimitedStagePointAmount)
def AddLimitedStagePointPerApMin(builder, LimitedStagePointPerApMin): builder.PrependInt64Slot(110, LimitedStagePointPerApMin, 0)
def ConstCommonExcelAddLimitedStagePointPerApMin(builder, LimitedStagePointPerApMin):
    """This method is deprecated. Please switch to AddLimitedStagePointPerApMin."""
    return AddLimitedStagePointPerApMin(builder, LimitedStagePointPerApMin)
def AddLimitedStagePointPerApMax(builder, LimitedStagePointPerApMax): builder.PrependInt64Slot(111, LimitedStagePointPerApMax, 0)
def ConstCommonExcelAddLimitedStagePointPerApMax(builder, LimitedStagePointPerApMax):
    """This method is deprecated. Please switch to AddLimitedStagePointPerApMax."""
    return AddLimitedStagePointPerApMax(builder, LimitedStagePointPerApMax)
def AddAccountLinkReward(builder, AccountLinkReward): builder.PrependInt32Slot(112, AccountLinkReward, 0)
def ConstCommonExcelAddAccountLinkReward(builder, AccountLinkReward):
    """This method is deprecated. Please switch to AddAccountLinkReward."""
    return AddAccountLinkReward(builder, AccountLinkReward)
def AddMonthlyProductCheckDays(builder, MonthlyProductCheckDays): builder.PrependInt32Slot(113, MonthlyProductCheckDays, 0)
def ConstCommonExcelAddMonthlyProductCheckDays(builder, MonthlyProductCheckDays):
    """This method is deprecated. Please switch to AddMonthlyProductCheckDays."""
    return AddMonthlyProductCheckDays(builder, MonthlyProductCheckDays)
def AddWeaponLvUpCoefficient(builder, WeaponLvUpCoefficient): builder.PrependInt32Slot(114, WeaponLvUpCoefficient, 0)
def ConstCommonExcelAddWeaponLvUpCoefficient(builder, WeaponLvUpCoefficient):
    """This method is deprecated. Please switch to AddWeaponLvUpCoefficient."""
    return AddWeaponLvUpCoefficient(builder, WeaponLvUpCoefficient)
def AddShowRaidMyListCount(builder, ShowRaidMyListCount): builder.PrependInt32Slot(115, ShowRaidMyListCount, 0)
def ConstCommonExcelAddShowRaidMyListCount(builder, ShowRaidMyListCount):
    """This method is deprecated. Please switch to AddShowRaidMyListCount."""
    return AddShowRaidMyListCount(builder, ShowRaidMyListCount)
def AddMaxLevelExpMasterCoinRatio(builder, MaxLevelExpMasterCoinRatio): builder.PrependInt32Slot(116, MaxLevelExpMasterCoinRatio, 0)
def ConstCommonExcelAddMaxLevelExpMasterCoinRatio(builder, MaxLevelExpMasterCoinRatio):
    """This method is deprecated. Please switch to AddMaxLevelExpMasterCoinRatio."""
    return AddMaxLevelExpMasterCoinRatio(builder, MaxLevelExpMasterCoinRatio)
def AddMasterCoinItemId(builder, MasterCoinItemId): builder.PrependInt64Slot(117, MasterCoinItemId, 0)
def ConstCommonExcelAddMasterCoinItemId(builder, MasterCoinItemId):
    """This method is deprecated. Please switch to AddMasterCoinItemId."""
    return AddMasterCoinItemId(builder, MasterCoinItemId)
def AddCallnameLengthEn(builder, CallnameLengthEn): builder.PrependInt32Slot(118, CallnameLengthEn, 0)
def ConstCommonExcelAddCallnameLengthEn(builder, CallnameLengthEn):
    """This method is deprecated. Please switch to AddCallnameLengthEn."""
    return AddCallnameLengthEn(builder, CallnameLengthEn)
def AddCallnameLengthKr(builder, CallnameLengthKr): builder.PrependInt32Slot(119, CallnameLengthKr, 0)
def ConstCommonExcelAddCallnameLengthKr(builder, CallnameLengthKr):
    """This method is deprecated. Please switch to AddCallnameLengthKr."""
    return AddCallnameLengthKr(builder, CallnameLengthKr)
def AddNicknameLengthKr(builder, NicknameLengthKr): builder.PrependInt32Slot(120, NicknameLengthKr, 0)
def ConstCommonExcelAddNicknameLengthKr(builder, NicknameLengthKr):
    """This method is deprecated. Please switch to AddNicknameLengthKr."""
    return AddNicknameLengthKr(builder, NicknameLengthKr)
def AddClanNameLength(builder, ClanNameLength): builder.PrependInt32Slot(121, ClanNameLength, 0)
def ConstCommonExcelAddClanNameLength(builder, ClanNameLength):
    """This method is deprecated. Please switch to AddClanNameLength."""
    return AddClanNameLength(builder, ClanNameLength)
def End(builder): return builder.EndObject()
def ConstCommonExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)