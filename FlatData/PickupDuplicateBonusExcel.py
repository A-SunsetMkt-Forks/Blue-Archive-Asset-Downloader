# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class PickupDuplicateBonusExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = PickupDuplicateBonusExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsPickupDuplicateBonusExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # PickupDuplicateBonusExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # PickupDuplicateBonusExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # PickupDuplicateBonusExcel
    def ShopCategoryType_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PickupDuplicateBonusExcel
    def ShopId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # PickupDuplicateBonusExcel
    def PickupCharacterId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # PickupDuplicateBonusExcel
    def RewardParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PickupDuplicateBonusExcel
    def RewardParcelId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # PickupDuplicateBonusExcel
    def RewardParcelAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(7)
def PickupDuplicateBonusExcelStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddId(builder, Id): builder.PrependInt64Slot(0, Id, 0)
def PickupDuplicateBonusExcelAddId(builder, Id):
    """This method is deprecated. Please switch to AddId."""
    return AddId(builder, Id)
def AddShopCategoryType_(builder, ShopCategoryType_): builder.PrependInt32Slot(1, ShopCategoryType_, 0)
def PickupDuplicateBonusExcelAddShopCategoryType_(builder, ShopCategoryType_):
    """This method is deprecated. Please switch to AddShopCategoryType_."""
    return AddShopCategoryType_(builder, ShopCategoryType_)
def AddShopId(builder, ShopId): builder.PrependInt64Slot(2, ShopId, 0)
def PickupDuplicateBonusExcelAddShopId(builder, ShopId):
    """This method is deprecated. Please switch to AddShopId."""
    return AddShopId(builder, ShopId)
def AddPickupCharacterId(builder, PickupCharacterId): builder.PrependInt64Slot(3, PickupCharacterId, 0)
def PickupDuplicateBonusExcelAddPickupCharacterId(builder, PickupCharacterId):
    """This method is deprecated. Please switch to AddPickupCharacterId."""
    return AddPickupCharacterId(builder, PickupCharacterId)
def AddRewardParcelType(builder, RewardParcelType): builder.PrependInt32Slot(4, RewardParcelType, 0)
def PickupDuplicateBonusExcelAddRewardParcelType(builder, RewardParcelType):
    """This method is deprecated. Please switch to AddRewardParcelType."""
    return AddRewardParcelType(builder, RewardParcelType)
def AddRewardParcelId(builder, RewardParcelId): builder.PrependInt64Slot(5, RewardParcelId, 0)
def PickupDuplicateBonusExcelAddRewardParcelId(builder, RewardParcelId):
    """This method is deprecated. Please switch to AddRewardParcelId."""
    return AddRewardParcelId(builder, RewardParcelId)
def AddRewardParcelAmount(builder, RewardParcelAmount): builder.PrependInt64Slot(6, RewardParcelAmount, 0)
def PickupDuplicateBonusExcelAddRewardParcelAmount(builder, RewardParcelAmount):
    """This method is deprecated. Please switch to AddRewardParcelAmount."""
    return AddRewardParcelAmount(builder, RewardParcelAmount)
def End(builder): return builder.EndObject()
def PickupDuplicateBonusExcelEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)